{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"C:/Users/vara prasad/OneDrive/Documents/GitHub/AI-Recruitment-HR-Automation/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createElement, forwardRef, useState, useEffect } from 'react';\n\n/**\r\n* Resolve icon set icons\r\n*\r\n* Returns parent icon for each icon\r\n*/\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || Object.create(null);\n  const resolved = Object.create(null);\n  function resolve(name) {\n    if (icons[name]) return resolved[name] = [];\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) resolved[name] = [parent].concat(value);\n    }\n    return resolved[name];\n  }\n  Object.keys(icons).concat(Object.keys(aliases)).forEach(resolve);\n  return resolved;\n}\n\n/**\r\n* Default values for dimensions\r\n*/\nconst defaultIconDimensions = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16\n});\n/**\r\n* Default values for transformations\r\n*/\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\n/**\r\n* Default values for all optional IconifyIcon properties\r\n*/\nconst defaultIconProps = Object.freeze(_objectSpread(_objectSpread({}, defaultIconDimensions), defaultIconTransformations));\n/**\r\n* Default values for all properties used in ExtendedIconifyIcon\r\n*/\nconst defaultExtendedIconProps = Object.freeze(_objectSpread(_objectSpread({}, defaultIconProps), {}, {\n  body: \"\",\n  hidden: false\n}));\n\n/**\r\n* Merge transformations\r\n*/\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) result.hFlip = true;\n  if (!obj1.vFlip !== !obj2.vFlip) result.vFlip = true;\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) result.rotate = rotate;\n  return result;\n}\n\n/**\r\n* Merge icon and alias\r\n*\r\n* Can also be used to merge default values and icon\r\n*/\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) if (key in defaultIconTransformations) {\n    if (key in parent && !(key in result)) result[key] = defaultIconTransformations[key];\n  } else if (key in child) result[key] = child[key];else if (key in parent) result[key] = parent[key];\n  return result;\n}\n\n/**\r\n* Get icon data, using prepared aliases tree\r\n*/\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || Object.create(null);\n  let currentProps = {};\n  function parse(name$1) {\n    currentProps = mergeIconData(icons[name$1] || aliases[name$1], currentProps);\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\n/**\r\n* Extract icons from an icon set\r\n*\r\n* Returns list of icons that were found in icon set\r\n*/\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") return names;\n  if (data.not_found instanceof Array) data.not_found.forEach(name => {\n    callback(name, null);\n    names.push(name);\n  });\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\n/**\r\n* Optional properties\r\n*/\nconst optionalPropertyDefaults = _objectSpread({\n  provider: \"\",\n  aliases: {},\n  not_found: {}\n}, defaultIconDimensions);\n/**\r\n* Check props\r\n*/\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) if (prop in item && typeof item[prop] !== typeof defaults[prop]) return false;\n  return true;\n}\n/**\r\n* Validate icon set, return it as IconifyJSON on success, null on failure\r\n*\r\n* Unlike validateIconSet(), this function is very basic.\r\n* It does not throw exceptions, it does not check metadata, it does not fix stuff.\r\n*/\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) return null;\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") return null;\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) return null;\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name || typeof icon.body !== \"string\" || !checkOptionalProps(icon, defaultExtendedIconProps)) return null;\n  }\n  const aliases = data.aliases || Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(icon, defaultExtendedIconProps)) return null;\n  }\n  return data;\n}\n\n/**\r\n* Storage by provider and prefix\r\n*/\nconst dataStorage = Object.create(null);\n/**\r\n* Create new storage\r\n*/\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: Object.create(null),\n    missing: /* @__PURE__ */new Set()\n  };\n}\n/**\r\n* Get storage for provider and prefix\r\n*/\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\n/**\r\n* Add icon set to storage\r\n*\r\n* Returns array of added icons\r\n*/\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) return [];\n  return parseIconSet(data, (name, icon) => {\n    if (icon) storage.icons[name] = icon;else storage.missing.add(name);\n  });\n}\n/**\r\n* Add icon to storage\r\n*/\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = _objectSpread({}, icon);\n      return true;\n    }\n  } catch (err) {}\n  return false;\n}\n/**\r\n* List available icons\r\n*/\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach(provider$1 => {\n    const prefixes = typeof provider$1 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider$1] || {});\n    prefixes.forEach(prefix$1 => {\n      const storage = getStorage(provider$1, prefix$1);\n      allIcons = allIcons.concat(Object.keys(storage.icons).map(name => (provider$1 !== \"\" ? \"@\" + provider$1 + \":\" : \"\") + prefix$1 + \":\" + name));\n    });\n  });\n  return allIcons;\n}\n\n/**\r\n* Expression to test part of icon name.\r\n*\r\n* Used when loading icons from Iconify API due to project naming convension.\r\n* Ignored when using custom icon sets - convension does not apply.\r\n*/\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\n/**\r\n* Convert string icon name to IconifyIconName object.\r\n*/\nconst stringToIcon = function (value, validate, allowSimpleName) {\n  let provider = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) return null;\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) return null;\n  if (colonSeparated.length > 1) {\n    const name$1 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name$1\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\n/**\r\n* Check if icon is valid.\r\n*\r\n* This function is not part of stringToIcon because validation is not needed for most code.\r\n*/\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) return false;\n  return !!((allowSimpleName && icon.prefix === \"\" || !!icon.prefix) && !!icon.name);\n};\n\n/**\r\n* Allow storing icons without provider or prefix, making it possible to store icons like \"home\"\r\n*/\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") simpleNames = allow;\n  return simpleNames;\n}\n/**\r\n* Get icon data\r\n*\r\n* Returns:\r\n* - IconifyIcon on success, object directly from storage so don't modify it\r\n* - null if icon is marked as missing (returned in `not_found` property from API, so don't bother sending API requests)\r\n* - undefined if icon is missing in storage\r\n*/\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\n/**\r\n* Add one icon\r\n*/\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) return false;\n  const storage = getStorage(icon.provider, icon.prefix);\n  if (data) return addIconToStorage(storage, icon.name, data);else {\n    storage.missing.add(icon.name);\n    return true;\n  }\n}\n/**\r\n* Add icon set\r\n*/\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") return false;\n  if (typeof provider !== \"string\") provider = data.provider || \"\";\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (addIcon(name, icon)) added = true;\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    prefix,\n    name: \"a\"\n  })) return false;\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\n/**\r\n* Check if icon data is available\r\n*/\nfunction iconLoaded(name) {\n  return !!getIconData(name);\n}\n/**\r\n* Get full icon\r\n*/\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? _objectSpread(_objectSpread({}, defaultIconProps), result) : result;\n}\n\n/**\r\n* Default icon customisations values\r\n*/\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze(_objectSpread(_objectSpread({}, defaultIconSizeCustomisations), defaultIconTransformations));\n\n/**\r\n* Regular expressions for calculating dimensions\r\n*/\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) return size;\n  precision = precision || 100;\n  if (typeof size === \"number\") return Math.ceil(size * ratio * precision) / precision;\n  if (typeof size !== \"string\") return size;\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) return size;\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) newParts.push(code);else newParts.push(Math.ceil(num * ratio * precision) / precision);\n    } else newParts.push(code);\n    code = oldParts.shift();\n    if (code === void 0) return newParts.join(\"\");\n    isNumber = !isNumber;\n  }\n}\nfunction splitSVGDefs(content) {\n  let tag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"defs\";\n  let defs = \"\";\n  const index = content.indexOf(\"<\" + tag);\n  while (index >= 0) {\n    const start = content.indexOf(\">\", index);\n    const end = content.indexOf(\"</\" + tag);\n    if (start === -1 || end === -1) break;\n    const endEnd = content.indexOf(\">\", end);\n    if (endEnd === -1) break;\n    defs += content.slice(start + 1, end).trim();\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n  }\n  return {\n    defs,\n    content\n  };\n}\n/**\r\n* Merge defs and content\r\n*/\nfunction mergeDefsAndContent(defs, content) {\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\n/**\r\n* Wrap SVG content, without wrapping definitions\r\n*/\nfunction wrapSVGContent(body, start, end) {\n  const split = splitSVGDefs(body);\n  return mergeDefsAndContent(split.defs, start + split.content + end);\n}\n\n/**\r\n* Check if value should be unset. Allows multiple keywords\r\n*/\nconst isUnsetKeyword = value => value === \"unset\" || value === \"undefined\" || value === \"none\";\n/**\r\n* Get SVG attributes and content from icon + customisations\r\n*\r\n* Does not generate style to make it compatible with frameworks that use objects for style, such as React.\r\n* Instead, it generates 'inline' value. If true, rendering engine should add verticalAlign: -0.125em to icon.\r\n*\r\n* Customisations should be normalised by platform specific parser.\r\n* Result should be converted to <svg> by platform specific parser.\r\n* Use replaceIDs to generate unique IDs for body.\r\n*/\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = _objectSpread(_objectSpread({}, defaultIconProps), icon);\n  const fullCustomisations = _objectSpread(_objectSpread({}, defaultIconCustomisations), customisations);\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach(props => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) rotation += 2;else {\n        transformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) rotation -= Math.floor(rotation / 4) * 4;\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) body = wrapSVGContent(body, \"<g transform=\\\"\" + transformations.join(\" \") + \"\\\">\", \"</g>\");\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) attributes[prop] = value.toString();\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  const viewBox = [box.left, box.top, boxWidth, boxHeight];\n  attributes.viewBox = viewBox.join(\" \");\n  return {\n    attributes,\n    viewBox,\n    body\n  };\n}\n\n/**\r\n* IDs usage:\r\n*\r\n* id=\"{id}\"\r\n* xlink:href=\"#{id}\"\r\n* url(#{id})\r\n*\r\n* From SVG animations:\r\n*\r\n* begin=\"0;{id}.end\"\r\n* begin=\"{id}.end\"\r\n* begin=\"{id}.click\"\r\n*/\n/**\r\n* Regular expression for finding ids\r\n*/\nconst regex = /\\sid=\"(\\S+)\"/g;\n/**\r\n* New random-ish prefix for ids\r\n*\r\n* Do not use dash, it cannot be used in SVG 2 animations\r\n*/\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\n/**\r\n* Counter for ids, increasing with every replacement\r\n*/\nlet counter = 0;\n/**\r\n* Replace IDs in SVG output with unique IDs\r\n*/\nfunction replaceIDs(body) {\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : randomPrefix;\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) ids.push(match[1]);\n  if (!ids.length) return body;\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach(id => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp(\"([#;\\\"])(\" + escapedID + \")([\\\")]|\\\\.[a-z])\", \"g\"), \"$1\" + newID + suffix + \"$3\");\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\n/**\r\n* Local storate types and entries\r\n*/\nconst storage = Object.create(null);\n/**\r\n* Set API module\r\n*/\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\n/**\r\n* Get API module\r\n*/\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\n/**\r\n* Create full API configuration from partial data\r\n*/\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") resources = [source.resources];else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) return null;\n  }\n  const result = {\n    resources,\n    path: source.path || \"/\",\n    maxURL: source.maxURL || 500,\n    rotate: source.rotate || 750,\n    timeout: source.timeout || 5e3,\n    random: source.random === true,\n    index: source.index || 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\n/**\r\n* Local storage\r\n*/\nconst configStorage = Object.create(null);\n/**\r\n* Redundancy for API servers.\r\n*\r\n* API should have very high uptime because of implemented redundancy at server level, but\r\n* sometimes bad things happen. On internet 100% uptime is not possible.\r\n*\r\n* There could be routing problems. Server might go down for whatever reason, but it takes\r\n* few minutes to detect that downtime, so during those few minutes API might not be accessible.\r\n*\r\n* This script has some redundancy to mitigate possible network issues.\r\n*\r\n* If one host cannot be reached in 'rotate' (750 by default) ms, script will try to retrieve\r\n* data from different host. Hosts have different configurations, pointing to different\r\n* API servers hosted at different providers.\r\n*/\nconst fallBackAPISources = [\"https://api.simplesvg.com\", \"https://api.unisvg.com\"];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) if (fallBackAPISources.length === 1) fallBackAPI.push(fallBackAPISources.shift());else if (Math.random() > .5) fallBackAPI.push(fallBackAPISources.shift());else fallBackAPI.push(fallBackAPISources.pop());\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\n/**\r\n* Add custom config for provider\r\n*/\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) return false;\n  configStorage[provider] = config;\n  return true;\n}\n/**\r\n* Get API configuration\r\n*/\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\n/**\r\n* List API providers\r\n*/\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") return callback;\n  } catch (err) {}\n};\n/**\r\n* Fetch function\r\n*/\nlet fetchModule = detectFetch();\n/**\r\n* Set custom fetch() function\r\n*/\nfunction setFetch(fetch$1) {\n  fetchModule = fetch$1;\n}\n/**\r\n* Get fetch() function. Used by Icon Finder Core\r\n*/\nfunction getFetch() {\n  return fetchModule;\n}\n/**\r\n* Calculate maximum icons list length for prefix\r\n*/\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) return 0;\n  let result;\n  if (!config.maxURL) result = 0;else {\n    let maxHostLength = 0;\n    config.resources.forEach(item => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\n/**\r\n* Should query be aborted, based on last HTTP status\r\n*/\nfunction shouldAbort(status) {\n  return status === 404;\n}\n/**\r\n* Prepare params\r\n*/\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\n/**\r\n* Get path\r\n*/\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) return config.path;\n  }\n  return \"/\";\n}\n/**\r\n* Load icons\r\n*/\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\":\n      {\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(\",\");\n        const urlParams = new URLSearchParams({\n          icons: iconsList\n        });\n        path += prefix + \".json?\" + urlParams.toString();\n        break;\n      }\n    case \"custom\":\n      {\n        const uri = params.uri;\n        path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n        break;\n      }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then(response => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then(data => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) callback(\"abort\", data);else callback(\"next\", defaultError);\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\n/**\r\n* Export module\r\n*/\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\n/**\r\n* Remove callback\r\n*/\nfunction removeCallback(storages, id) {\n  storages.forEach(storage => {\n    const items = storage.loaderCallbacks;\n    if (items) storage.loaderCallbacks = items.filter(row => row.id !== id);\n  });\n}\n/**\r\n* Update all callbacks for provider and prefix\r\n*/\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) return;\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach(item => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter(icon => {\n          if (icon.prefix !== prefix) return true;\n          const name = icon.name;\n          if (storage.icons[name]) icons.loaded.push({\n            provider,\n            prefix,\n            name\n          });else if (storage.missing.has(name)) icons.missing.push({\n            provider,\n            prefix,\n            name\n          });else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) removeCallback([storage], item.id);\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\n/**\r\n* Unique id counter for callbacks\r\n*/\nlet idCounter = 0;\n/**\r\n* Add callback\r\n*/\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) return abort;\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach(storage => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\n/**\r\n* Check if icons have been loaded\r\n*/\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) return a.provider.localeCompare(b.provider);\n    if (a.prefix !== b.prefix) return a.prefix.localeCompare(b.prefix);\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach(icon => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) return;\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) list = result.loaded;else if (prefix === \"\" || localStorage.missing.has(name)) list = result.missing;else list = result.pending;\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\n/**\r\n* Convert icons list from string/icon mix to icons and validate them\r\n*/\nfunction listToIcons(list) {\n  let validate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let simpleNames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const result = [];\n  list.forEach(item => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) result.push(icon);\n  });\n  return result;\n}\n\n/**\r\n* Default RedundancyConfig for API calls\r\n*/\nconst defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n/**\r\n* Send query\r\n*/\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") doneCallbacks.push(done);\n  /**\r\n  * Reset timer\r\n  */\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  /**\r\n  * Abort everything\r\n  */\n  function abort() {\n    if (status === \"pending\") status = \"aborted\";\n    resetTimer();\n    queue.forEach(item => {\n      if (item.status === \"pending\") item.status = \"aborted\";\n    });\n    queue = [];\n  }\n  /**\r\n  * Add / replace callback to call when execution is complete.\r\n  * This can be used to abort pending query implementations when query is complete or aborted.\r\n  */\n  function subscribe(callback, overwrite) {\n    if (overwrite) doneCallbacks = [];\n    if (typeof callback === \"function\") doneCallbacks.push(callback);\n  }\n  /**\r\n  * Get query status\r\n  */\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  /**\r\n  * Fail query\r\n  */\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach(callback => {\n      callback(void 0, lastError);\n    });\n  }\n  /**\r\n  * Clear queue\r\n  */\n  function clearQueue() {\n    queue.forEach(item => {\n      if (item.status === \"pending\") item.status = \"aborted\";\n    });\n    queue = [];\n  }\n  /**\r\n  * Got response from module\r\n  */\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter(queued => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) return;\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) if (!resources.length) failQuery();else execNext();\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) config.index = index;\n    }\n    status = \"completed\";\n    doneCallbacks.forEach(callback => {\n      callback(data);\n    });\n  }\n  /**\r\n  * Execute next query\r\n  */\n  function execNext() {\n    if (status !== \"pending\") return;\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status$1, data) => {\n        moduleResponse(item, status$1, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n/**\r\n* Redundancy instance\r\n*/\nfunction initRedundancy(cfg) {\n  const config = _objectSpread(_objectSpread({}, defaultConfig), cfg);\n  let queries = [];\n  /**\r\n  * Remove aborted and completed queries\r\n  */\n  function cleanup() {\n    queries = queries.filter(item => item().status === \"pending\");\n  }\n  /**\r\n  * Send query\r\n  */\n  function query(payload, queryCallback, doneCallback) {\n    const query$1 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) doneCallback(data, error);\n    });\n    queries.push(query$1);\n    return query$1;\n  }\n  /**\r\n  * Find instance\r\n  */\n  function find(callback) {\n    return queries.find(value => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: index => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\nfunction emptyCallback$1() {}\nconst redundancyCache = Object.create(null);\n/**\r\n* Get Redundancy instance for provider\r\n*/\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) return;\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\n/**\r\n* Send API query\r\n*/\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) redundancy = cached.redundancy;\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) send = api.send;\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\nfunction emptyCallback() {}\n/**\r\n* Function called when new icons have been loaded\r\n*/\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\n/**\r\n* Check icon names for API\r\n*/\nfunction checkIconNamesForAPI(icons) {\n  const valid = [];\n  const invalid = [];\n  icons.forEach(name => {\n    (name.match(matchIconName) ? valid : invalid).push(name);\n  });\n  return {\n    valid,\n    invalid\n  };\n}\n/**\r\n* Parse loader response\r\n*/\nfunction parseLoaderResponse(storage, icons, data) {\n  function checkMissing() {\n    const pending = storage.pendingIcons;\n    icons.forEach(name => {\n      if (pending) pending.delete(name);\n      if (!storage.icons[name]) storage.missing.add(name);\n    });\n  }\n  if (data && typeof data === \"object\") try {\n    const parsed = addIconSet(storage, data);\n    if (!parsed.length) {\n      checkMissing();\n      return;\n    }\n  } catch (err) {\n    console.error(err);\n  }\n  checkMissing();\n  loadedNewIcons(storage);\n}\n/**\r\n* Handle response that can be async\r\n*/\nfunction parsePossiblyAsyncResponse(response, callback) {\n  if (response instanceof Promise) response.then(data => {\n    callback(data);\n  }).catch(() => {\n    callback(null);\n  });else callback(response);\n}\n/**\r\n* Load icons\r\n*/\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) storage.iconsToLoad = icons;else storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const {\n        provider,\n        prefix\n      } = storage;\n      const icons$1 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      if (!icons$1 || !icons$1.length) return;\n      const customIconLoader = storage.loadIcon;\n      if (storage.loadIcons && (icons$1.length > 1 || !customIconLoader)) {\n        parsePossiblyAsyncResponse(storage.loadIcons(icons$1, prefix, provider), data => {\n          parseLoaderResponse(storage, icons$1, data);\n        });\n        return;\n      }\n      if (customIconLoader) {\n        icons$1.forEach(name => {\n          const response = customIconLoader(name, prefix, provider);\n          parsePossiblyAsyncResponse(response, data => {\n            const iconSet = data ? {\n              prefix,\n              icons: {\n                [name]: data\n              }\n            } : null;\n            parseLoaderResponse(storage, [name], iconSet);\n          });\n        });\n        return;\n      }\n      const {\n        valid,\n        invalid\n      } = checkIconNamesForAPI(icons$1);\n      if (invalid.length) parseLoaderResponse(storage, invalid, null);\n      if (!valid.length) return;\n      const api = prefix.match(matchIconName) ? getAPIModule(provider) : null;\n      if (!api) {\n        parseLoaderResponse(storage, valid, null);\n        return;\n      }\n      const params = api.prepare(provider, prefix, valid);\n      params.forEach(item => {\n        sendAPIQuery(provider, item, data => {\n          parseLoaderResponse(storage, item.icons, data);\n        });\n      });\n    });\n  }\n}\n/**\r\n* Load icons\r\n*/\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) setTimeout(() => {\n      if (callCallback) callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n    });\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach(icon => {\n    const {\n      provider,\n      prefix\n    } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) return;\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = Object.create(null));\n    if (!providerNewIcons[prefix]) providerNewIcons[prefix] = [];\n  });\n  sortedIcons.pending.forEach(icon => {\n    const {\n      provider,\n      prefix,\n      name\n    } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach(storage => {\n    const list = newIcons[storage.provider][storage.prefix];\n    if (list.length) loadNewIcons(storage, list);\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\n/**\r\n* Load one icon using Promise\r\n*/\nconst loadIcon = icon => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], loaded => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill(_objectSpread(_objectSpread({}, defaultIconProps), data));\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\n/**\r\n* Set custom loader for multiple icons\r\n*/\nfunction setCustomIconsLoader(loader, prefix, provider) {\n  getStorage(provider || \"\", prefix).loadIcons = loader;\n}\n/**\r\n* Set custom loader for one icon\r\n*/\nfunction setCustomIconLoader(loader, prefix, provider) {\n  getStorage(provider || \"\", prefix).loadIcon = loader;\n}\n\n/**\r\n* Convert IconifyIconCustomisations to FullIconCustomisations, checking value types\r\n*/\nfunction mergeCustomisations(defaults, item) {\n  const result = _objectSpread({}, defaults);\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) result[key] = value;\n    } else if (valueType === typeof result[key]) result[key] = key === \"rotate\" ? value % 4 : value;\n  }\n  return result;\n}\nconst separator = /[\\s,]+/;\n/**\r\n* Apply \"flip\" string to icon customisations\r\n*/\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach(str => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\n/**\r\n* Get rotation value\r\n*/\nfunction rotateFromString(value) {\n  let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value$1) {\n    while (value$1 < 0) value$1 += 4;\n    return value$1 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) return 0;\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\n/**\r\n* Generate <svg>\r\n*/\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : \" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\";\n  for (const attr in attributes) renderAttribsHTML += \" \" + attr + \"=\\\"\" + attributes[attr] + \"\\\"\";\n  return \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\n/**\r\n* Encode SVG for use in url()\r\n*\r\n* Short alternative to encodeURIComponent() that encodes only stuff used in SVG, generating\r\n* smaller code.\r\n*/\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\n/**\r\n* Generate data: URL from SVG\r\n*/\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\n/**\r\n* Generate url() from SVG\r\n*/\nfunction svgToURL(svg) {\n  return \"url(\\\"\" + svgToData(svg) + \"\\\")\";\n}\nlet policy;\n/**\r\n* Attempt to create policy\r\n*/\nfunction createPolicy() {\n  try {\n    policy = window.trustedTypes.createPolicy(\"iconify\", {\n      createHTML: s => s\n    });\n  } catch (err) {\n    policy = null;\n  }\n}\n/**\r\n* Clean up value for innerHTML assignment\r\n*\r\n* This code doesn't actually clean up anything.\r\n* It is intended be used with Iconify icon data, which has already been validated\r\n*/\nfunction cleanUpInnerHTML(html) {\n  if (policy === void 0) createPolicy();\n  return policy ? policy.createHTML(html) : html;\n}\nconst defaultExtendedIconCustomisations = _objectSpread(_objectSpread({}, defaultIconCustomisations), {}, {\n  inline: false\n});\n\n/**\r\n * Default SVG attributes\r\n */\nconst svgDefaults = {\n  'xmlns': 'http://www.w3.org/2000/svg',\n  'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n  'aria-hidden': true,\n  'role': 'img'\n};\n/**\r\n * Style modes\r\n */\nconst commonProps = {\n  display: 'inline-block'\n};\nconst monotoneProps = {\n  backgroundColor: 'currentColor'\n};\nconst coloredProps = {\n  backgroundColor: 'transparent'\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n  Image: 'var(--svg)',\n  Repeat: 'no-repeat',\n  Size: '100% 100%'\n};\nconst propsToAddTo = {\n  WebkitMask: monotoneProps,\n  mask: monotoneProps,\n  background: coloredProps\n};\nfor (const prefix in propsToAddTo) {\n  const list = propsToAddTo[prefix];\n  for (const prop in propsToAdd) {\n    list[prefix + prop] = propsToAdd[prop];\n  }\n}\n/**\r\n * Default values for customisations for inline icon\r\n */\nconst inlineDefaults = _objectSpread(_objectSpread({}, defaultExtendedIconCustomisations), {}, {\n  inline: true\n});\n/**\r\n * Fix size: add 'px' to numbers\r\n */\nfunction fixSize(value) {\n  return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\r\n * Render icon\r\n */\nconst render = (\n// Icon must be validated before calling this function\nicon,\n// Partial properties\nprops,\n// Icon name\nname) => {\n  // Get default properties\n  const defaultProps = props.inline ? inlineDefaults : defaultExtendedIconCustomisations;\n  // Get all customisations\n  const customisations = mergeCustomisations(defaultProps, props);\n  // Check mode\n  const mode = props.mode || 'svg';\n  // Create style\n  const style = {};\n  const customStyle = props.style || {};\n  // Create SVG component properties\n  const componentProps = _objectSpread({}, mode === 'svg' ? svgDefaults : {});\n  if (name) {\n    const iconName = stringToIcon(name, false, true);\n    if (iconName) {\n      const classNames = ['iconify'];\n      const props = ['provider', 'prefix'];\n      for (const prop of props) {\n        if (iconName[prop]) {\n          classNames.push('iconify--' + iconName[prop]);\n        }\n      }\n      componentProps.className = classNames.join(' ');\n    }\n  }\n  // Get element properties\n  for (let key in props) {\n    const value = props[key];\n    if (value === void 0) {\n      continue;\n    }\n    switch (key) {\n      // Properties to ignore\n      case 'icon':\n      case 'style':\n      case 'children':\n      case 'onLoad':\n      case 'mode':\n      case 'ssr':\n      case 'fallback':\n        break;\n      // Forward ref\n      case '_ref':\n        componentProps.ref = value;\n        break;\n      // Merge class names\n      case 'className':\n        componentProps[key] = (componentProps[key] ? componentProps[key] + ' ' : '') + value;\n        break;\n      // Boolean attributes\n      case 'inline':\n      case 'hFlip':\n      case 'vFlip':\n        customisations[key] = value === true || value === 'true' || value === 1;\n        break;\n      // Flip as string: 'horizontal,vertical'\n      case 'flip':\n        if (typeof value === 'string') {\n          flipFromString(customisations, value);\n        }\n        break;\n      // Color: copy to style\n      case 'color':\n        style.color = value;\n        break;\n      // Rotation as string\n      case 'rotate':\n        if (typeof value === 'string') {\n          customisations[key] = rotateFromString(value);\n        } else if (typeof value === 'number') {\n          customisations[key] = value;\n        }\n        break;\n      // Remove aria-hidden\n      case 'ariaHidden':\n      case 'aria-hidden':\n        if (value !== true && value !== 'true') {\n          delete componentProps['aria-hidden'];\n        }\n        break;\n      // Copy missing property if it does not exist in customisations\n      default:\n        if (defaultProps[key] === void 0) {\n          componentProps[key] = value;\n        }\n    }\n  }\n  // Generate icon\n  const item = iconToSVG(icon, customisations);\n  const renderAttribs = item.attributes;\n  // Inline display\n  if (customisations.inline) {\n    style.verticalAlign = '-0.125em';\n  }\n  if (mode === 'svg') {\n    // Add style\n    componentProps.style = _objectSpread(_objectSpread({}, style), customStyle);\n    // Add icon stuff\n    Object.assign(componentProps, renderAttribs);\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    let id = props.id;\n    if (typeof id === 'string') {\n      // Convert '-' to '_' to avoid errors in animations\n      id = id.replace(/-/g, '_');\n    }\n    // Add icon stuff\n    componentProps.dangerouslySetInnerHTML = {\n      __html: cleanUpInnerHTML(replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact'))\n    };\n    return createElement('svg', componentProps);\n  }\n  // Render <span> with style\n  const {\n    body,\n    width,\n    height\n  } = icon;\n  const useMask = mode === 'mask' || (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n  // Generate SVG\n  const html = iconToHTML(body, _objectSpread(_objectSpread({}, renderAttribs), {}, {\n    width: width + '',\n    height: height + ''\n  }));\n  // Generate style\n  componentProps.style = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, style), {}, {\n    '--svg': svgToURL(html),\n    'width': fixSize(renderAttribs.width),\n    'height': fixSize(renderAttribs.height)\n  }, commonProps), useMask ? monotoneProps : coloredProps), customStyle);\n  return createElement('span', componentProps);\n};\n\n/**\r\n * Initialise stuff\r\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\r\n * Browser stuff\r\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  const _window = window;\n  // Load icons from global \"IconifyPreload\"\n  if (_window.IconifyPreload !== void 0) {\n    const preload = _window.IconifyPreload;\n    const err = 'Invalid IconifyPreload syntax.';\n    if (typeof preload === 'object' && preload !== null) {\n      (preload instanceof Array ? preload : [preload]).forEach(item => {\n        try {\n          if (\n          // Check if item is an object and not null/array\n          typeof item !== 'object' || item === null || item instanceof Array ||\n          // Check for 'icons' and 'prefix'\n          typeof item.icons !== 'object' || typeof item.prefix !== 'string' ||\n          // Add icon set\n          !addCollection(item)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      });\n    }\n  }\n  // Set API from global \"IconifyProviders\"\n  if (_window.IconifyProviders !== void 0) {\n    const providers = _window.IconifyProviders;\n    if (typeof providers === 'object' && providers !== null) {\n      for (let key in providers) {\n        const err = 'IconifyProviders[' + key + '] is invalid.';\n        try {\n          const value = providers[key];\n          if (typeof value !== 'object' || !value || value.resources === void 0) {\n            continue;\n          }\n          if (!addAPIProvider(key, value)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      }\n    }\n  }\n}\nfunction IconComponent(props) {\n  const [mounted, setMounted] = useState(!!props.ssr);\n  const [abort, setAbort] = useState({});\n  // Get initial state\n  function getInitialState(mounted) {\n    if (mounted) {\n      const name = props.icon;\n      if (typeof name === 'object') {\n        // Icon as object\n        return {\n          name: '',\n          data: name\n        };\n      }\n      const data = getIconData(name);\n      if (data) {\n        return {\n          name,\n          data\n        };\n      }\n    }\n    return {\n      name: ''\n    };\n  }\n  const [state, setState] = useState(getInitialState(!!props.ssr));\n  // Cancel loading\n  function cleanup() {\n    const callback = abort.callback;\n    if (callback) {\n      callback();\n      setAbort({});\n    }\n  }\n  // Change state if it is different\n  function changeState(newState) {\n    if (JSON.stringify(state) !== JSON.stringify(newState)) {\n      cleanup();\n      setState(newState);\n      return true;\n    }\n  }\n  // Update state\n  function updateState() {\n    var _a;\n    const name = props.icon;\n    if (typeof name === 'object') {\n      // Icon as object\n      changeState({\n        name: '',\n        data: name\n      });\n      return;\n    }\n    // New icon or got icon data\n    const data = getIconData(name);\n    if (changeState({\n      name,\n      data\n    })) {\n      if (data === undefined) {\n        // Load icon, update state when done\n        const callback = loadIcons([name], updateState);\n        setAbort({\n          callback\n        });\n      } else if (data) {\n        // Icon data is available: trigger onLoad callback if present\n        (_a = props.onLoad) === null || _a === void 0 ? void 0 : _a.call(props, name);\n      }\n    }\n  }\n  // Mounted state, cleanup for loader\n  useEffect(() => {\n    setMounted(true);\n    return cleanup;\n  }, []);\n  // Icon changed or component mounted\n  useEffect(() => {\n    if (mounted) {\n      updateState();\n    }\n  }, [props.icon, mounted]);\n  // Render icon\n  const {\n    name,\n    data\n  } = state;\n  if (!data) {\n    return props.children ? props.children : props.fallback ? props.fallback : createElement('span', {});\n  }\n  return render(_objectSpread(_objectSpread({}, defaultIconProps), data), props, name);\n}\n/**\r\n * Block icon\r\n *\r\n * @param props - Component properties\r\n */\nconst Icon = forwardRef((props, ref) => IconComponent(_objectSpread(_objectSpread({}, props), {}, {\n  _ref: ref\n})));\n/**\r\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\r\n *\r\n * @param props - Component properties\r\n */\nconst InlineIcon = forwardRef((props, ref) => IconComponent(_objectSpread(_objectSpread({\n  inline: true\n}, props), {}, {\n  _ref: ref\n})));\n/**\r\n * Internal API\r\n */\nconst _api = {\n  getAPIConfig,\n  setAPIModule,\n  sendAPIQuery,\n  setFetch,\n  getFetch,\n  listAPIProviders\n};\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, getIcon, iconLoaded, listIcons, loadIcon, loadIcons, replaceIDs, setCustomIconLoader, setCustomIconsLoader };","map":{"version":3,"names":["_objectSpread","createElement","forwardRef","useState","useEffect","getIconsTree","data","names","icons","aliases","Object","create","resolved","resolve","name","parent","value","concat","keys","forEach","defaultIconDimensions","freeze","left","top","width","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","defaultExtendedIconProps","body","hidden","mergeIconTransformations","obj1","obj2","result","mergeIconData","child","key","internalGetIconData","tree","currentProps","parse","name$1","parseIconSet","callback","not_found","Array","push","item","optionalPropertyDefaults","provider","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","prefix","icon","dataStorage","newStorage","missing","Set","getStorage","providerStorage","addIconSet","storage","add","addIconToStorage","err","listIcons","allIcons","providers","provider$1","prefixes","prefix$1","map","matchIconName","stringToIcon","validate","allowSimpleName","arguments","length","undefined","colonSeparated","split","slice","shift","pop","validateIconName","dashSeparated","join","simpleNames","allowSimpleNames","allow","getIconData","iconName","has","addIcon","addCollection","added","iconLoaded","getIcon","defaultIconSizeCustomisations","defaultIconCustomisations","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","splitSVGDefs","content","tag","defs","index","indexOf","start","end","endEnd","trim","mergeDefsAndContent","wrapSVGContent","isUnsetKeyword","iconToSVG","customisations","fullIcon","fullCustomisations","box","props","transformations","rotation","toString","tempValue","floor","unshift","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","setAttr","viewBox","regex","randomPrefix","Date","now","random","counter","replaceIDs","ids","match","exec","suffix","id","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","listAPIProviders","detectFetch","fetch","fetchModule","setFetch","fetch$1","getFetch","calculateMaxLength","maxHostLength","host","max","url","shouldAbort","status","prepare","results","maxLength","type","getPath","send","params","iconsList","urlParams","URLSearchParams","uri","defaultError","then","response","setTimeout","json","catch","fetchAPIModule","removeCallback","storages","items","loaderCallbacks","filter","row","updateCallbacks","pendingCallbacksFlag","hasPending","oldLength","pending","loaded","abort","idCounter","storeCallback","pendingSources","bind","sortIcons","sort","a","b","localeCompare","lastIcon","localStorage","list","listToIcons","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","nextIndex","startTime","queriesSent","lastError","timer","queue","doneCallbacks","resetTimer","clearTimeout","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","moduleResponse","isError","queued","execNext","resource","status$1","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query$1","error","find","instance","setIndex","getIndex","emptyCallback$1","redundancyCache","getRedundancyCache","redundancy","cachedReundancy","sendAPIQuery","target","api","cached","moduleKey","emptyCallback","loadedNewIcons","iconsLoaderFlag","checkIconNamesForAPI","valid","invalid","parseLoaderResponse","checkMissing","pendingIcons","delete","parsed","console","parsePossiblyAsyncResponse","Promise","loadNewIcons","iconsToLoad","iconsQueueFlag","icons$1","customIconLoader","loadIcon","loadIcons","iconSet","cleanedIcons","sortedIcons","callCallback","newIcons","sources","lastProvider","lastPrefix","providerNewIcons","pendingQueue","fulfill","reject","iconObj","setCustomIconsLoader","loader","setCustomIconLoader","mergeCustomisations","valueType","separator","flipFromString","custom","flip","str","rotateFromString","defaultValue","units","value$1","parseInt","iconToHTML","renderAttribsHTML","attr","encodeSVGforURL","svg","svgToData","svgToURL","policy","createPolicy","window","trustedTypes","createHTML","s","cleanUpInnerHTML","html","defaultExtendedIconCustomisations","inline","svgDefaults","commonProps","display","monotoneProps","backgroundColor","coloredProps","propsToAdd","Image","Repeat","Size","propsToAddTo","WebkitMask","mask","background","inlineDefaults","fixSize","render","defaultProps","mode","style","customStyle","componentProps","classNames","className","ref","color","renderAttribs","verticalAlign","assign","localCounter","dangerouslySetInnerHTML","__html","useMask","document","_window","IconifyPreload","preload","e","IconifyProviders","IconComponent","mounted","setMounted","ssr","setAbort","getInitialState","state","setState","changeState","newState","JSON","stringify","updateState","_a","onLoad","call","children","fallback","Icon","_ref","InlineIcon","_api","buildIcon"],"sources":["C:/Users/vara prasad/OneDrive/Documents/GitHub/AI-Recruitment-HR-Automation/client/node_modules/@iconify/react/dist/iconify.js"],"sourcesContent":["'use client';\r\n\r\nimport { createElement, forwardRef, useState, useEffect } from 'react';\r\n\r\n/**\r\n* Resolve icon set icons\r\n*\r\n* Returns parent icon for each icon\r\n*/\r\nfunction getIconsTree(data, names) {\r\n\tconst icons = data.icons;\r\n\tconst aliases = data.aliases || Object.create(null);\r\n\tconst resolved = Object.create(null);\r\n\tfunction resolve(name) {\r\n\t\tif (icons[name]) return resolved[name] = [];\r\n\t\tif (!(name in resolved)) {\r\n\t\t\tresolved[name] = null;\r\n\t\t\tconst parent = aliases[name] && aliases[name].parent;\r\n\t\t\tconst value = parent && resolve(parent);\r\n\t\t\tif (value) resolved[name] = [parent].concat(value);\r\n\t\t}\r\n\t\treturn resolved[name];\r\n\t}\r\n\t(Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\r\n\treturn resolved;\r\n}\r\n\r\n/**\r\n* Default values for dimensions\r\n*/\r\nconst defaultIconDimensions = Object.freeze({\r\n\tleft: 0,\r\n\ttop: 0,\r\n\twidth: 16,\r\n\theight: 16\r\n});\r\n/**\r\n* Default values for transformations\r\n*/\r\nconst defaultIconTransformations = Object.freeze({\r\n\trotate: 0,\r\n\tvFlip: false,\r\n\thFlip: false\r\n});\r\n/**\r\n* Default values for all optional IconifyIcon properties\r\n*/\r\nconst defaultIconProps = Object.freeze({\r\n\t...defaultIconDimensions,\r\n\t...defaultIconTransformations\r\n});\r\n/**\r\n* Default values for all properties used in ExtendedIconifyIcon\r\n*/\r\nconst defaultExtendedIconProps = Object.freeze({\r\n\t...defaultIconProps,\r\n\tbody: \"\",\r\n\thidden: false\r\n});\r\n\r\n/**\r\n* Merge transformations\r\n*/\r\nfunction mergeIconTransformations(obj1, obj2) {\r\n\tconst result = {};\r\n\tif (!obj1.hFlip !== !obj2.hFlip) result.hFlip = true;\r\n\tif (!obj1.vFlip !== !obj2.vFlip) result.vFlip = true;\r\n\tconst rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\r\n\tif (rotate) result.rotate = rotate;\r\n\treturn result;\r\n}\r\n\r\n/**\r\n* Merge icon and alias\r\n*\r\n* Can also be used to merge default values and icon\r\n*/\r\nfunction mergeIconData(parent, child) {\r\n\tconst result = mergeIconTransformations(parent, child);\r\n\tfor (const key in defaultExtendedIconProps) if (key in defaultIconTransformations) {\r\n\t\tif (key in parent && !(key in result)) result[key] = defaultIconTransformations[key];\r\n\t} else if (key in child) result[key] = child[key];\r\n\telse if (key in parent) result[key] = parent[key];\r\n\treturn result;\r\n}\r\n\r\n/**\r\n* Get icon data, using prepared aliases tree\r\n*/\r\nfunction internalGetIconData(data, name, tree) {\r\n\tconst icons = data.icons;\r\n\tconst aliases = data.aliases || Object.create(null);\r\n\tlet currentProps = {};\r\n\tfunction parse(name$1) {\r\n\t\tcurrentProps = mergeIconData(icons[name$1] || aliases[name$1], currentProps);\r\n\t}\r\n\tparse(name);\r\n\ttree.forEach(parse);\r\n\treturn mergeIconData(data, currentProps);\r\n}\r\n\r\n/**\r\n* Extract icons from an icon set\r\n*\r\n* Returns list of icons that were found in icon set\r\n*/\r\nfunction parseIconSet(data, callback) {\r\n\tconst names = [];\r\n\tif (typeof data !== \"object\" || typeof data.icons !== \"object\") return names;\r\n\tif (data.not_found instanceof Array) data.not_found.forEach((name) => {\r\n\t\tcallback(name, null);\r\n\t\tnames.push(name);\r\n\t});\r\n\tconst tree = getIconsTree(data);\r\n\tfor (const name in tree) {\r\n\t\tconst item = tree[name];\r\n\t\tif (item) {\r\n\t\t\tcallback(name, internalGetIconData(data, name, item));\r\n\t\t\tnames.push(name);\r\n\t\t}\r\n\t}\r\n\treturn names;\r\n}\r\n\r\n/**\r\n* Optional properties\r\n*/\r\nconst optionalPropertyDefaults = {\r\n\tprovider: \"\",\r\n\taliases: {},\r\n\tnot_found: {},\r\n\t...defaultIconDimensions\r\n};\r\n/**\r\n* Check props\r\n*/\r\nfunction checkOptionalProps(item, defaults) {\r\n\tfor (const prop in defaults) if (prop in item && typeof item[prop] !== typeof defaults[prop]) return false;\r\n\treturn true;\r\n}\r\n/**\r\n* Validate icon set, return it as IconifyJSON on success, null on failure\r\n*\r\n* Unlike validateIconSet(), this function is very basic.\r\n* It does not throw exceptions, it does not check metadata, it does not fix stuff.\r\n*/\r\nfunction quicklyValidateIconSet(obj) {\r\n\tif (typeof obj !== \"object\" || obj === null) return null;\r\n\tconst data = obj;\r\n\tif (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") return null;\r\n\tif (!checkOptionalProps(obj, optionalPropertyDefaults)) return null;\r\n\tconst icons = data.icons;\r\n\tfor (const name in icons) {\r\n\t\tconst icon = icons[name];\r\n\t\tif (!name || typeof icon.body !== \"string\" || !checkOptionalProps(icon, defaultExtendedIconProps)) return null;\r\n\t}\r\n\tconst aliases = data.aliases || Object.create(null);\r\n\tfor (const name in aliases) {\r\n\t\tconst icon = aliases[name];\r\n\t\tconst parent = icon.parent;\r\n\t\tif (!name || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(icon, defaultExtendedIconProps)) return null;\r\n\t}\r\n\treturn data;\r\n}\r\n\r\n/**\r\n* Storage by provider and prefix\r\n*/\r\nconst dataStorage = Object.create(null);\r\n/**\r\n* Create new storage\r\n*/\r\nfunction newStorage(provider, prefix) {\r\n\treturn {\r\n\t\tprovider,\r\n\t\tprefix,\r\n\t\ticons: Object.create(null),\r\n\t\tmissing: /* @__PURE__ */ new Set()\r\n\t};\r\n}\r\n/**\r\n* Get storage for provider and prefix\r\n*/\r\nfunction getStorage(provider, prefix) {\r\n\tconst providerStorage = dataStorage[provider] || (dataStorage[provider] = Object.create(null));\r\n\treturn providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\r\n}\r\n/**\r\n* Add icon set to storage\r\n*\r\n* Returns array of added icons\r\n*/\r\nfunction addIconSet(storage, data) {\r\n\tif (!quicklyValidateIconSet(data)) return [];\r\n\treturn parseIconSet(data, (name, icon) => {\r\n\t\tif (icon) storage.icons[name] = icon;\r\n\t\telse storage.missing.add(name);\r\n\t});\r\n}\r\n/**\r\n* Add icon to storage\r\n*/\r\nfunction addIconToStorage(storage, name, icon) {\r\n\ttry {\r\n\t\tif (typeof icon.body === \"string\") {\r\n\t\t\tstorage.icons[name] = { ...icon };\r\n\t\t\treturn true;\r\n\t\t}\r\n\t} catch (err) {}\r\n\treturn false;\r\n}\r\n/**\r\n* List available icons\r\n*/\r\nfunction listIcons(provider, prefix) {\r\n\tlet allIcons = [];\r\n\tconst providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\r\n\tproviders.forEach((provider$1) => {\r\n\t\tconst prefixes = typeof provider$1 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider$1] || {});\r\n\t\tprefixes.forEach((prefix$1) => {\r\n\t\t\tconst storage = getStorage(provider$1, prefix$1);\r\n\t\t\tallIcons = allIcons.concat(Object.keys(storage.icons).map((name) => (provider$1 !== \"\" ? \"@\" + provider$1 + \":\" : \"\") + prefix$1 + \":\" + name));\r\n\t\t});\r\n\t});\r\n\treturn allIcons;\r\n}\r\n\r\n/**\r\n* Expression to test part of icon name.\r\n*\r\n* Used when loading icons from Iconify API due to project naming convension.\r\n* Ignored when using custom icon sets - convension does not apply.\r\n*/\r\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\r\n/**\r\n* Convert string icon name to IconifyIconName object.\r\n*/\r\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\r\n\tconst colonSeparated = value.split(\":\");\r\n\tif (value.slice(0, 1) === \"@\") {\r\n\t\tif (colonSeparated.length < 2 || colonSeparated.length > 3) return null;\r\n\t\tprovider = colonSeparated.shift().slice(1);\r\n\t}\r\n\tif (colonSeparated.length > 3 || !colonSeparated.length) return null;\r\n\tif (colonSeparated.length > 1) {\r\n\t\tconst name$1 = colonSeparated.pop();\r\n\t\tconst prefix = colonSeparated.pop();\r\n\t\tconst result = {\r\n\t\t\tprovider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\r\n\t\t\tprefix,\r\n\t\t\tname: name$1\r\n\t\t};\r\n\t\treturn validate && !validateIconName(result) ? null : result;\r\n\t}\r\n\tconst name = colonSeparated[0];\r\n\tconst dashSeparated = name.split(\"-\");\r\n\tif (dashSeparated.length > 1) {\r\n\t\tconst result = {\r\n\t\t\tprovider,\r\n\t\t\tprefix: dashSeparated.shift(),\r\n\t\t\tname: dashSeparated.join(\"-\")\r\n\t\t};\r\n\t\treturn validate && !validateIconName(result) ? null : result;\r\n\t}\r\n\tif (allowSimpleName && provider === \"\") {\r\n\t\tconst result = {\r\n\t\t\tprovider,\r\n\t\t\tprefix: \"\",\r\n\t\t\tname\r\n\t\t};\r\n\t\treturn validate && !validateIconName(result, allowSimpleName) ? null : result;\r\n\t}\r\n\treturn null;\r\n};\r\n/**\r\n* Check if icon is valid.\r\n*\r\n* This function is not part of stringToIcon because validation is not needed for most code.\r\n*/\r\nconst validateIconName = (icon, allowSimpleName) => {\r\n\tif (!icon) return false;\r\n\treturn !!((allowSimpleName && icon.prefix === \"\" || !!icon.prefix) && !!icon.name);\r\n};\r\n\r\n/**\r\n* Allow storing icons without provider or prefix, making it possible to store icons like \"home\"\r\n*/\r\nlet simpleNames = false;\r\nfunction allowSimpleNames(allow) {\r\n\tif (typeof allow === \"boolean\") simpleNames = allow;\r\n\treturn simpleNames;\r\n}\r\n/**\r\n* Get icon data\r\n*\r\n* Returns:\r\n* - IconifyIcon on success, object directly from storage so don't modify it\r\n* - null if icon is marked as missing (returned in `not_found` property from API, so don't bother sending API requests)\r\n* - undefined if icon is missing in storage\r\n*/\r\nfunction getIconData(name) {\r\n\tconst icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\r\n\tif (icon) {\r\n\t\tconst storage = getStorage(icon.provider, icon.prefix);\r\n\t\tconst iconName = icon.name;\r\n\t\treturn storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\r\n\t}\r\n}\r\n/**\r\n* Add one icon\r\n*/\r\nfunction addIcon(name, data) {\r\n\tconst icon = stringToIcon(name, true, simpleNames);\r\n\tif (!icon) return false;\r\n\tconst storage = getStorage(icon.provider, icon.prefix);\r\n\tif (data) return addIconToStorage(storage, icon.name, data);\r\n\telse {\r\n\t\tstorage.missing.add(icon.name);\r\n\t\treturn true;\r\n\t}\r\n}\r\n/**\r\n* Add icon set\r\n*/\r\nfunction addCollection(data, provider) {\r\n\tif (typeof data !== \"object\") return false;\r\n\tif (typeof provider !== \"string\") provider = data.provider || \"\";\r\n\tif (simpleNames && !provider && !data.prefix) {\r\n\t\tlet added = false;\r\n\t\tif (quicklyValidateIconSet(data)) {\r\n\t\t\tdata.prefix = \"\";\r\n\t\t\tparseIconSet(data, (name, icon) => {\r\n\t\t\t\tif (addIcon(name, icon)) added = true;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn added;\r\n\t}\r\n\tconst prefix = data.prefix;\r\n\tif (!validateIconName({\r\n\t\tprefix,\r\n\t\tname: \"a\"\r\n\t})) return false;\r\n\tconst storage = getStorage(provider, prefix);\r\n\treturn !!addIconSet(storage, data);\r\n}\r\n/**\r\n* Check if icon data is available\r\n*/\r\nfunction iconLoaded(name) {\r\n\treturn !!getIconData(name);\r\n}\r\n/**\r\n* Get full icon\r\n*/\r\nfunction getIcon(name) {\r\n\tconst result = getIconData(name);\r\n\treturn result ? {\r\n\t\t...defaultIconProps,\r\n\t\t...result\r\n\t} : result;\r\n}\r\n\r\n/**\r\n* Default icon customisations values\r\n*/\r\nconst defaultIconSizeCustomisations = Object.freeze({\r\n\twidth: null,\r\n\theight: null\r\n});\r\nconst defaultIconCustomisations = Object.freeze({\r\n\t...defaultIconSizeCustomisations,\r\n\t...defaultIconTransformations\r\n});\r\n\r\n/**\r\n* Regular expressions for calculating dimensions\r\n*/\r\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\r\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\r\nfunction calculateSize(size, ratio, precision) {\r\n\tif (ratio === 1) return size;\r\n\tprecision = precision || 100;\r\n\tif (typeof size === \"number\") return Math.ceil(size * ratio * precision) / precision;\r\n\tif (typeof size !== \"string\") return size;\r\n\tconst oldParts = size.split(unitsSplit);\r\n\tif (oldParts === null || !oldParts.length) return size;\r\n\tconst newParts = [];\r\n\tlet code = oldParts.shift();\r\n\tlet isNumber = unitsTest.test(code);\r\n\twhile (true) {\r\n\t\tif (isNumber) {\r\n\t\t\tconst num = parseFloat(code);\r\n\t\t\tif (isNaN(num)) newParts.push(code);\r\n\t\t\telse newParts.push(Math.ceil(num * ratio * precision) / precision);\r\n\t\t} else newParts.push(code);\r\n\t\tcode = oldParts.shift();\r\n\t\tif (code === void 0) return newParts.join(\"\");\r\n\t\tisNumber = !isNumber;\r\n\t}\r\n}\r\n\r\nfunction splitSVGDefs(content, tag = \"defs\") {\r\n\tlet defs = \"\";\r\n\tconst index = content.indexOf(\"<\" + tag);\r\n\twhile (index >= 0) {\r\n\t\tconst start = content.indexOf(\">\", index);\r\n\t\tconst end = content.indexOf(\"</\" + tag);\r\n\t\tif (start === -1 || end === -1) break;\r\n\t\tconst endEnd = content.indexOf(\">\", end);\r\n\t\tif (endEnd === -1) break;\r\n\t\tdefs += content.slice(start + 1, end).trim();\r\n\t\tcontent = content.slice(0, index).trim() + content.slice(endEnd + 1);\r\n\t}\r\n\treturn {\r\n\t\tdefs,\r\n\t\tcontent\r\n\t};\r\n}\r\n/**\r\n* Merge defs and content\r\n*/\r\nfunction mergeDefsAndContent(defs, content) {\r\n\treturn defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\r\n}\r\n/**\r\n* Wrap SVG content, without wrapping definitions\r\n*/\r\nfunction wrapSVGContent(body, start, end) {\r\n\tconst split = splitSVGDefs(body);\r\n\treturn mergeDefsAndContent(split.defs, start + split.content + end);\r\n}\r\n\r\n/**\r\n* Check if value should be unset. Allows multiple keywords\r\n*/\r\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\r\n/**\r\n* Get SVG attributes and content from icon + customisations\r\n*\r\n* Does not generate style to make it compatible with frameworks that use objects for style, such as React.\r\n* Instead, it generates 'inline' value. If true, rendering engine should add verticalAlign: -0.125em to icon.\r\n*\r\n* Customisations should be normalised by platform specific parser.\r\n* Result should be converted to <svg> by platform specific parser.\r\n* Use replaceIDs to generate unique IDs for body.\r\n*/\r\nfunction iconToSVG(icon, customisations) {\r\n\tconst fullIcon = {\r\n\t\t...defaultIconProps,\r\n\t\t...icon\r\n\t};\r\n\tconst fullCustomisations = {\r\n\t\t...defaultIconCustomisations,\r\n\t\t...customisations\r\n\t};\r\n\tconst box = {\r\n\t\tleft: fullIcon.left,\r\n\t\ttop: fullIcon.top,\r\n\t\twidth: fullIcon.width,\r\n\t\theight: fullIcon.height\r\n\t};\r\n\tlet body = fullIcon.body;\r\n\t[fullIcon, fullCustomisations].forEach((props) => {\r\n\t\tconst transformations = [];\r\n\t\tconst hFlip = props.hFlip;\r\n\t\tconst vFlip = props.vFlip;\r\n\t\tlet rotation = props.rotate;\r\n\t\tif (hFlip) if (vFlip) rotation += 2;\r\n\t\telse {\r\n\t\t\ttransformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\r\n\t\t\ttransformations.push(\"scale(-1 1)\");\r\n\t\t\tbox.top = box.left = 0;\r\n\t\t}\r\n\t\telse if (vFlip) {\r\n\t\t\ttransformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\r\n\t\t\ttransformations.push(\"scale(1 -1)\");\r\n\t\t\tbox.top = box.left = 0;\r\n\t\t}\r\n\t\tlet tempValue;\r\n\t\tif (rotation < 0) rotation -= Math.floor(rotation / 4) * 4;\r\n\t\trotation = rotation % 4;\r\n\t\tswitch (rotation) {\r\n\t\t\tcase 1:\r\n\t\t\t\ttempValue = box.height / 2 + box.top;\r\n\t\t\t\ttransformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\ttransformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\ttempValue = box.width / 2 + box.left;\r\n\t\t\t\ttransformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif (rotation % 2 === 1) {\r\n\t\t\tif (box.left !== box.top) {\r\n\t\t\t\ttempValue = box.left;\r\n\t\t\t\tbox.left = box.top;\r\n\t\t\t\tbox.top = tempValue;\r\n\t\t\t}\r\n\t\t\tif (box.width !== box.height) {\r\n\t\t\t\ttempValue = box.width;\r\n\t\t\t\tbox.width = box.height;\r\n\t\t\t\tbox.height = tempValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (transformations.length) body = wrapSVGContent(body, \"<g transform=\\\"\" + transformations.join(\" \") + \"\\\">\", \"</g>\");\r\n\t});\r\n\tconst customisationsWidth = fullCustomisations.width;\r\n\tconst customisationsHeight = fullCustomisations.height;\r\n\tconst boxWidth = box.width;\r\n\tconst boxHeight = box.height;\r\n\tlet width;\r\n\tlet height;\r\n\tif (customisationsWidth === null) {\r\n\t\theight = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\r\n\t\twidth = calculateSize(height, boxWidth / boxHeight);\r\n\t} else {\r\n\t\twidth = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\r\n\t\theight = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\r\n\t}\r\n\tconst attributes = {};\r\n\tconst setAttr = (prop, value) => {\r\n\t\tif (!isUnsetKeyword(value)) attributes[prop] = value.toString();\r\n\t};\r\n\tsetAttr(\"width\", width);\r\n\tsetAttr(\"height\", height);\r\n\tconst viewBox = [\r\n\t\tbox.left,\r\n\t\tbox.top,\r\n\t\tboxWidth,\r\n\t\tboxHeight\r\n\t];\r\n\tattributes.viewBox = viewBox.join(\" \");\r\n\treturn {\r\n\t\tattributes,\r\n\t\tviewBox,\r\n\t\tbody\r\n\t};\r\n}\r\n\r\n/**\r\n* IDs usage:\r\n*\r\n* id=\"{id}\"\r\n* xlink:href=\"#{id}\"\r\n* url(#{id})\r\n*\r\n* From SVG animations:\r\n*\r\n* begin=\"0;{id}.end\"\r\n* begin=\"{id}.end\"\r\n* begin=\"{id}.click\"\r\n*/\r\n/**\r\n* Regular expression for finding ids\r\n*/\r\nconst regex = /\\sid=\"(\\S+)\"/g;\r\n/**\r\n* New random-ish prefix for ids\r\n*\r\n* Do not use dash, it cannot be used in SVG 2 animations\r\n*/\r\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\r\n/**\r\n* Counter for ids, increasing with every replacement\r\n*/\r\nlet counter = 0;\r\n/**\r\n* Replace IDs in SVG output with unique IDs\r\n*/\r\nfunction replaceIDs(body, prefix = randomPrefix) {\r\n\tconst ids = [];\r\n\tlet match;\r\n\twhile (match = regex.exec(body)) ids.push(match[1]);\r\n\tif (!ids.length) return body;\r\n\tconst suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\r\n\tids.forEach((id) => {\r\n\t\tconst newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\r\n\t\tconst escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n\t\tbody = body.replace(new RegExp(\"([#;\\\"])(\" + escapedID + \")([\\\")]|\\\\.[a-z])\", \"g\"), \"$1\" + newID + suffix + \"$3\");\r\n\t});\r\n\tbody = body.replace(new RegExp(suffix, \"g\"), \"\");\r\n\treturn body;\r\n}\r\n\r\n/**\r\n* Local storate types and entries\r\n*/\r\nconst storage = Object.create(null);\r\n/**\r\n* Set API module\r\n*/\r\nfunction setAPIModule(provider, item) {\r\n\tstorage[provider] = item;\r\n}\r\n/**\r\n* Get API module\r\n*/\r\nfunction getAPIModule(provider) {\r\n\treturn storage[provider] || storage[\"\"];\r\n}\r\n\r\n/**\r\n* Create full API configuration from partial data\r\n*/\r\nfunction createAPIConfig(source) {\r\n\tlet resources;\r\n\tif (typeof source.resources === \"string\") resources = [source.resources];\r\n\telse {\r\n\t\tresources = source.resources;\r\n\t\tif (!(resources instanceof Array) || !resources.length) return null;\r\n\t}\r\n\tconst result = {\r\n\t\tresources,\r\n\t\tpath: source.path || \"/\",\r\n\t\tmaxURL: source.maxURL || 500,\r\n\t\trotate: source.rotate || 750,\r\n\t\ttimeout: source.timeout || 5e3,\r\n\t\trandom: source.random === true,\r\n\t\tindex: source.index || 0,\r\n\t\tdataAfterTimeout: source.dataAfterTimeout !== false\r\n\t};\r\n\treturn result;\r\n}\r\n/**\r\n* Local storage\r\n*/\r\nconst configStorage = Object.create(null);\r\n/**\r\n* Redundancy for API servers.\r\n*\r\n* API should have very high uptime because of implemented redundancy at server level, but\r\n* sometimes bad things happen. On internet 100% uptime is not possible.\r\n*\r\n* There could be routing problems. Server might go down for whatever reason, but it takes\r\n* few minutes to detect that downtime, so during those few minutes API might not be accessible.\r\n*\r\n* This script has some redundancy to mitigate possible network issues.\r\n*\r\n* If one host cannot be reached in 'rotate' (750 by default) ms, script will try to retrieve\r\n* data from different host. Hosts have different configurations, pointing to different\r\n* API servers hosted at different providers.\r\n*/\r\nconst fallBackAPISources = [\"https://api.simplesvg.com\", \"https://api.unisvg.com\"];\r\nconst fallBackAPI = [];\r\nwhile (fallBackAPISources.length > 0) if (fallBackAPISources.length === 1) fallBackAPI.push(fallBackAPISources.shift());\r\nelse if (Math.random() > .5) fallBackAPI.push(fallBackAPISources.shift());\r\nelse fallBackAPI.push(fallBackAPISources.pop());\r\nconfigStorage[\"\"] = createAPIConfig({ resources: [\"https://api.iconify.design\"].concat(fallBackAPI) });\r\n/**\r\n* Add custom config for provider\r\n*/\r\nfunction addAPIProvider(provider, customConfig) {\r\n\tconst config = createAPIConfig(customConfig);\r\n\tif (config === null) return false;\r\n\tconfigStorage[provider] = config;\r\n\treturn true;\r\n}\r\n/**\r\n* Get API configuration\r\n*/\r\nfunction getAPIConfig(provider) {\r\n\treturn configStorage[provider];\r\n}\r\n/**\r\n* List API providers\r\n*/\r\nfunction listAPIProviders() {\r\n\treturn Object.keys(configStorage);\r\n}\r\n\r\nconst detectFetch = () => {\r\n\tlet callback;\r\n\ttry {\r\n\t\tcallback = fetch;\r\n\t\tif (typeof callback === \"function\") return callback;\r\n\t} catch (err) {}\r\n};\r\n/**\r\n* Fetch function\r\n*/\r\nlet fetchModule = detectFetch();\r\n/**\r\n* Set custom fetch() function\r\n*/\r\nfunction setFetch(fetch$1) {\r\n\tfetchModule = fetch$1;\r\n}\r\n/**\r\n* Get fetch() function. Used by Icon Finder Core\r\n*/\r\nfunction getFetch() {\r\n\treturn fetchModule;\r\n}\r\n/**\r\n* Calculate maximum icons list length for prefix\r\n*/\r\nfunction calculateMaxLength(provider, prefix) {\r\n\tconst config = getAPIConfig(provider);\r\n\tif (!config) return 0;\r\n\tlet result;\r\n\tif (!config.maxURL) result = 0;\r\n\telse {\r\n\t\tlet maxHostLength = 0;\r\n\t\tconfig.resources.forEach((item) => {\r\n\t\t\tconst host = item;\r\n\t\t\tmaxHostLength = Math.max(maxHostLength, host.length);\r\n\t\t});\r\n\t\tconst url = prefix + \".json?icons=\";\r\n\t\tresult = config.maxURL - maxHostLength - config.path.length - url.length;\r\n\t}\r\n\treturn result;\r\n}\r\n/**\r\n* Should query be aborted, based on last HTTP status\r\n*/\r\nfunction shouldAbort(status) {\r\n\treturn status === 404;\r\n}\r\n/**\r\n* Prepare params\r\n*/\r\nconst prepare = (provider, prefix, icons) => {\r\n\tconst results = [];\r\n\tconst maxLength = calculateMaxLength(provider, prefix);\r\n\tconst type = \"icons\";\r\n\tlet item = {\r\n\t\ttype,\r\n\t\tprovider,\r\n\t\tprefix,\r\n\t\ticons: []\r\n\t};\r\n\tlet length = 0;\r\n\ticons.forEach((name, index) => {\r\n\t\tlength += name.length + 1;\r\n\t\tif (length >= maxLength && index > 0) {\r\n\t\t\tresults.push(item);\r\n\t\t\titem = {\r\n\t\t\t\ttype,\r\n\t\t\t\tprovider,\r\n\t\t\t\tprefix,\r\n\t\t\t\ticons: []\r\n\t\t\t};\r\n\t\t\tlength = name.length;\r\n\t\t}\r\n\t\titem.icons.push(name);\r\n\t});\r\n\tresults.push(item);\r\n\treturn results;\r\n};\r\n/**\r\n* Get path\r\n*/\r\nfunction getPath(provider) {\r\n\tif (typeof provider === \"string\") {\r\n\t\tconst config = getAPIConfig(provider);\r\n\t\tif (config) return config.path;\r\n\t}\r\n\treturn \"/\";\r\n}\r\n/**\r\n* Load icons\r\n*/\r\nconst send = (host, params, callback) => {\r\n\tif (!fetchModule) {\r\n\t\tcallback(\"abort\", 424);\r\n\t\treturn;\r\n\t}\r\n\tlet path = getPath(params.provider);\r\n\tswitch (params.type) {\r\n\t\tcase \"icons\": {\r\n\t\t\tconst prefix = params.prefix;\r\n\t\t\tconst icons = params.icons;\r\n\t\t\tconst iconsList = icons.join(\",\");\r\n\t\t\tconst urlParams = new URLSearchParams({ icons: iconsList });\r\n\t\t\tpath += prefix + \".json?\" + urlParams.toString();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase \"custom\": {\r\n\t\t\tconst uri = params.uri;\r\n\t\t\tpath += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\tcallback(\"abort\", 400);\r\n\t\t\treturn;\r\n\t}\r\n\tlet defaultError = 503;\r\n\tfetchModule(host + path).then((response) => {\r\n\t\tconst status = response.status;\r\n\t\tif (status !== 200) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tcallback(shouldAbort(status) ? \"abort\" : \"next\", status);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdefaultError = 501;\r\n\t\treturn response.json();\r\n\t}).then((data) => {\r\n\t\tif (typeof data !== \"object\" || data === null) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (data === 404) callback(\"abort\", data);\r\n\t\t\t\telse callback(\"next\", defaultError);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tcallback(\"success\", data);\r\n\t\t});\r\n\t}).catch(() => {\r\n\t\tcallback(\"next\", defaultError);\r\n\t});\r\n};\r\n/**\r\n* Export module\r\n*/\r\nconst fetchAPIModule = {\r\n\tprepare,\r\n\tsend\r\n};\r\n\r\n/**\r\n* Remove callback\r\n*/\r\nfunction removeCallback(storages, id) {\r\n\tstorages.forEach((storage) => {\r\n\t\tconst items = storage.loaderCallbacks;\r\n\t\tif (items) storage.loaderCallbacks = items.filter((row) => row.id !== id);\r\n\t});\r\n}\r\n/**\r\n* Update all callbacks for provider and prefix\r\n*/\r\nfunction updateCallbacks(storage) {\r\n\tif (!storage.pendingCallbacksFlag) {\r\n\t\tstorage.pendingCallbacksFlag = true;\r\n\t\tsetTimeout(() => {\r\n\t\t\tstorage.pendingCallbacksFlag = false;\r\n\t\t\tconst items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\r\n\t\t\tif (!items.length) return;\r\n\t\t\tlet hasPending = false;\r\n\t\t\tconst provider = storage.provider;\r\n\t\t\tconst prefix = storage.prefix;\r\n\t\t\titems.forEach((item) => {\r\n\t\t\t\tconst icons = item.icons;\r\n\t\t\t\tconst oldLength = icons.pending.length;\r\n\t\t\t\ticons.pending = icons.pending.filter((icon) => {\r\n\t\t\t\t\tif (icon.prefix !== prefix) return true;\r\n\t\t\t\t\tconst name = icon.name;\r\n\t\t\t\t\tif (storage.icons[name]) icons.loaded.push({\r\n\t\t\t\t\t\tprovider,\r\n\t\t\t\t\t\tprefix,\r\n\t\t\t\t\t\tname\r\n\t\t\t\t\t});\r\n\t\t\t\t\telse if (storage.missing.has(name)) icons.missing.push({\r\n\t\t\t\t\t\tprovider,\r\n\t\t\t\t\t\tprefix,\r\n\t\t\t\t\t\tname\r\n\t\t\t\t\t});\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\thasPending = true;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t});\r\n\t\t\t\tif (icons.pending.length !== oldLength) {\r\n\t\t\t\t\tif (!hasPending) removeCallback([storage], item.id);\r\n\t\t\t\t\titem.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n/**\r\n* Unique id counter for callbacks\r\n*/\r\nlet idCounter = 0;\r\n/**\r\n* Add callback\r\n*/\r\nfunction storeCallback(callback, icons, pendingSources) {\r\n\tconst id = idCounter++;\r\n\tconst abort = removeCallback.bind(null, pendingSources, id);\r\n\tif (!icons.pending.length) return abort;\r\n\tconst item = {\r\n\t\tid,\r\n\t\ticons,\r\n\t\tcallback,\r\n\t\tabort\r\n\t};\r\n\tpendingSources.forEach((storage) => {\r\n\t\t(storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\r\n\t});\r\n\treturn abort;\r\n}\r\n\r\n/**\r\n* Check if icons have been loaded\r\n*/\r\nfunction sortIcons(icons) {\r\n\tconst result = {\r\n\t\tloaded: [],\r\n\t\tmissing: [],\r\n\t\tpending: []\r\n\t};\r\n\tconst storage = Object.create(null);\r\n\ticons.sort((a, b) => {\r\n\t\tif (a.provider !== b.provider) return a.provider.localeCompare(b.provider);\r\n\t\tif (a.prefix !== b.prefix) return a.prefix.localeCompare(b.prefix);\r\n\t\treturn a.name.localeCompare(b.name);\r\n\t});\r\n\tlet lastIcon = {\r\n\t\tprovider: \"\",\r\n\t\tprefix: \"\",\r\n\t\tname: \"\"\r\n\t};\r\n\ticons.forEach((icon) => {\r\n\t\tif (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) return;\r\n\t\tlastIcon = icon;\r\n\t\tconst provider = icon.provider;\r\n\t\tconst prefix = icon.prefix;\r\n\t\tconst name = icon.name;\r\n\t\tconst providerStorage = storage[provider] || (storage[provider] = Object.create(null));\r\n\t\tconst localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\r\n\t\tlet list;\r\n\t\tif (name in localStorage.icons) list = result.loaded;\r\n\t\telse if (prefix === \"\" || localStorage.missing.has(name)) list = result.missing;\r\n\t\telse list = result.pending;\r\n\t\tconst item = {\r\n\t\t\tprovider,\r\n\t\t\tprefix,\r\n\t\t\tname\r\n\t\t};\r\n\t\tlist.push(item);\r\n\t});\r\n\treturn result;\r\n}\r\n\r\n/**\r\n* Convert icons list from string/icon mix to icons and validate them\r\n*/\r\nfunction listToIcons(list, validate = true, simpleNames = false) {\r\n\tconst result = [];\r\n\tlist.forEach((item) => {\r\n\t\tconst icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\r\n\t\tif (icon) result.push(icon);\r\n\t});\r\n\treturn result;\r\n}\r\n\r\n/**\r\n* Default RedundancyConfig for API calls\r\n*/\r\nconst defaultConfig = {\r\n\tresources: [],\r\n\tindex: 0,\r\n\ttimeout: 2e3,\r\n\trotate: 750,\r\n\trandom: false,\r\n\tdataAfterTimeout: false\r\n};\r\n\r\n/**\r\n* Send query\r\n*/\r\nfunction sendQuery(config, payload, query, done) {\r\n\tconst resourcesCount = config.resources.length;\r\n\tconst startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\r\n\tlet resources;\r\n\tif (config.random) {\r\n\t\tlet list = config.resources.slice(0);\r\n\t\tresources = [];\r\n\t\twhile (list.length > 1) {\r\n\t\t\tconst nextIndex = Math.floor(Math.random() * list.length);\r\n\t\t\tresources.push(list[nextIndex]);\r\n\t\t\tlist = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\r\n\t\t}\r\n\t\tresources = resources.concat(list);\r\n\t} else resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\r\n\tconst startTime = Date.now();\r\n\tlet status = \"pending\";\r\n\tlet queriesSent = 0;\r\n\tlet lastError;\r\n\tlet timer = null;\r\n\tlet queue = [];\r\n\tlet doneCallbacks = [];\r\n\tif (typeof done === \"function\") doneCallbacks.push(done);\r\n\t/**\r\n\t* Reset timer\r\n\t*/\r\n\tfunction resetTimer() {\r\n\t\tif (timer) {\r\n\t\t\tclearTimeout(timer);\r\n\t\t\ttimer = null;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t* Abort everything\r\n\t*/\r\n\tfunction abort() {\r\n\t\tif (status === \"pending\") status = \"aborted\";\r\n\t\tresetTimer();\r\n\t\tqueue.forEach((item) => {\r\n\t\t\tif (item.status === \"pending\") item.status = \"aborted\";\r\n\t\t});\r\n\t\tqueue = [];\r\n\t}\r\n\t/**\r\n\t* Add / replace callback to call when execution is complete.\r\n\t* This can be used to abort pending query implementations when query is complete or aborted.\r\n\t*/\r\n\tfunction subscribe(callback, overwrite) {\r\n\t\tif (overwrite) doneCallbacks = [];\r\n\t\tif (typeof callback === \"function\") doneCallbacks.push(callback);\r\n\t}\r\n\t/**\r\n\t* Get query status\r\n\t*/\r\n\tfunction getQueryStatus() {\r\n\t\treturn {\r\n\t\t\tstartTime,\r\n\t\t\tpayload,\r\n\t\t\tstatus,\r\n\t\t\tqueriesSent,\r\n\t\t\tqueriesPending: queue.length,\r\n\t\t\tsubscribe,\r\n\t\t\tabort\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t* Fail query\r\n\t*/\r\n\tfunction failQuery() {\r\n\t\tstatus = \"failed\";\r\n\t\tdoneCallbacks.forEach((callback) => {\r\n\t\t\tcallback(void 0, lastError);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t* Clear queue\r\n\t*/\r\n\tfunction clearQueue() {\r\n\t\tqueue.forEach((item) => {\r\n\t\t\tif (item.status === \"pending\") item.status = \"aborted\";\r\n\t\t});\r\n\t\tqueue = [];\r\n\t}\r\n\t/**\r\n\t* Got response from module\r\n\t*/\r\n\tfunction moduleResponse(item, response, data) {\r\n\t\tconst isError = response !== \"success\";\r\n\t\tqueue = queue.filter((queued) => queued !== item);\r\n\t\tswitch (status) {\r\n\t\t\tcase \"pending\": break;\r\n\t\t\tcase \"failed\":\r\n\t\t\t\tif (isError || !config.dataAfterTimeout) return;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: return;\r\n\t\t}\r\n\t\tif (response === \"abort\") {\r\n\t\t\tlastError = data;\r\n\t\t\tfailQuery();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (isError) {\r\n\t\t\tlastError = data;\r\n\t\t\tif (!queue.length) if (!resources.length) failQuery();\r\n\t\t\telse execNext();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tresetTimer();\r\n\t\tclearQueue();\r\n\t\tif (!config.random) {\r\n\t\t\tconst index = config.resources.indexOf(item.resource);\r\n\t\t\tif (index !== -1 && index !== config.index) config.index = index;\r\n\t\t}\r\n\t\tstatus = \"completed\";\r\n\t\tdoneCallbacks.forEach((callback) => {\r\n\t\t\tcallback(data);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t* Execute next query\r\n\t*/\r\n\tfunction execNext() {\r\n\t\tif (status !== \"pending\") return;\r\n\t\tresetTimer();\r\n\t\tconst resource = resources.shift();\r\n\t\tif (resource === void 0) {\r\n\t\t\tif (queue.length) {\r\n\t\t\t\ttimer = setTimeout(() => {\r\n\t\t\t\t\tresetTimer();\r\n\t\t\t\t\tif (status === \"pending\") {\r\n\t\t\t\t\t\tclearQueue();\r\n\t\t\t\t\t\tfailQuery();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, config.timeout);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfailQuery();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst item = {\r\n\t\t\tstatus: \"pending\",\r\n\t\t\tresource,\r\n\t\t\tcallback: (status$1, data) => {\r\n\t\t\t\tmoduleResponse(item, status$1, data);\r\n\t\t\t}\r\n\t\t};\r\n\t\tqueue.push(item);\r\n\t\tqueriesSent++;\r\n\t\ttimer = setTimeout(execNext, config.rotate);\r\n\t\tquery(resource, payload, item.callback);\r\n\t}\r\n\tsetTimeout(execNext);\r\n\treturn getQueryStatus;\r\n}\r\n\r\n/**\r\n* Redundancy instance\r\n*/\r\nfunction initRedundancy(cfg) {\r\n\tconst config = {\r\n\t\t...defaultConfig,\r\n\t\t...cfg\r\n\t};\r\n\tlet queries = [];\r\n\t/**\r\n\t* Remove aborted and completed queries\r\n\t*/\r\n\tfunction cleanup() {\r\n\t\tqueries = queries.filter((item) => item().status === \"pending\");\r\n\t}\r\n\t/**\r\n\t* Send query\r\n\t*/\r\n\tfunction query(payload, queryCallback, doneCallback) {\r\n\t\tconst query$1 = sendQuery(config, payload, queryCallback, (data, error) => {\r\n\t\t\tcleanup();\r\n\t\t\tif (doneCallback) doneCallback(data, error);\r\n\t\t});\r\n\t\tqueries.push(query$1);\r\n\t\treturn query$1;\r\n\t}\r\n\t/**\r\n\t* Find instance\r\n\t*/\r\n\tfunction find(callback) {\r\n\t\treturn queries.find((value) => {\r\n\t\t\treturn callback(value);\r\n\t\t}) || null;\r\n\t}\r\n\tconst instance = {\r\n\t\tquery,\r\n\t\tfind,\r\n\t\tsetIndex: (index) => {\r\n\t\t\tconfig.index = index;\r\n\t\t},\r\n\t\tgetIndex: () => config.index,\r\n\t\tcleanup\r\n\t};\r\n\treturn instance;\r\n}\r\n\r\nfunction emptyCallback$1() {}\r\nconst redundancyCache = Object.create(null);\r\n/**\r\n* Get Redundancy instance for provider\r\n*/\r\nfunction getRedundancyCache(provider) {\r\n\tif (!redundancyCache[provider]) {\r\n\t\tconst config = getAPIConfig(provider);\r\n\t\tif (!config) return;\r\n\t\tconst redundancy = initRedundancy(config);\r\n\t\tconst cachedReundancy = {\r\n\t\t\tconfig,\r\n\t\t\tredundancy\r\n\t\t};\r\n\t\tredundancyCache[provider] = cachedReundancy;\r\n\t}\r\n\treturn redundancyCache[provider];\r\n}\r\n/**\r\n* Send API query\r\n*/\r\nfunction sendAPIQuery(target, query, callback) {\r\n\tlet redundancy;\r\n\tlet send;\r\n\tif (typeof target === \"string\") {\r\n\t\tconst api = getAPIModule(target);\r\n\t\tif (!api) {\r\n\t\t\tcallback(void 0, 424);\r\n\t\t\treturn emptyCallback$1;\r\n\t\t}\r\n\t\tsend = api.send;\r\n\t\tconst cached = getRedundancyCache(target);\r\n\t\tif (cached) redundancy = cached.redundancy;\r\n\t} else {\r\n\t\tconst config = createAPIConfig(target);\r\n\t\tif (config) {\r\n\t\t\tredundancy = initRedundancy(config);\r\n\t\t\tconst moduleKey = target.resources ? target.resources[0] : \"\";\r\n\t\t\tconst api = getAPIModule(moduleKey);\r\n\t\t\tif (api) send = api.send;\r\n\t\t}\r\n\t}\r\n\tif (!redundancy || !send) {\r\n\t\tcallback(void 0, 424);\r\n\t\treturn emptyCallback$1;\r\n\t}\r\n\treturn redundancy.query(query, send, callback)().abort;\r\n}\r\n\r\nfunction emptyCallback() {}\r\n/**\r\n* Function called when new icons have been loaded\r\n*/\r\nfunction loadedNewIcons(storage) {\r\n\tif (!storage.iconsLoaderFlag) {\r\n\t\tstorage.iconsLoaderFlag = true;\r\n\t\tsetTimeout(() => {\r\n\t\t\tstorage.iconsLoaderFlag = false;\r\n\t\t\tupdateCallbacks(storage);\r\n\t\t});\r\n\t}\r\n}\r\n/**\r\n* Check icon names for API\r\n*/\r\nfunction checkIconNamesForAPI(icons) {\r\n\tconst valid = [];\r\n\tconst invalid = [];\r\n\ticons.forEach((name) => {\r\n\t\t(name.match(matchIconName) ? valid : invalid).push(name);\r\n\t});\r\n\treturn {\r\n\t\tvalid,\r\n\t\tinvalid\r\n\t};\r\n}\r\n/**\r\n* Parse loader response\r\n*/\r\nfunction parseLoaderResponse(storage, icons, data) {\r\n\tfunction checkMissing() {\r\n\t\tconst pending = storage.pendingIcons;\r\n\t\ticons.forEach((name) => {\r\n\t\t\tif (pending) pending.delete(name);\r\n\t\t\tif (!storage.icons[name]) storage.missing.add(name);\r\n\t\t});\r\n\t}\r\n\tif (data && typeof data === \"object\") try {\r\n\t\tconst parsed = addIconSet(storage, data);\r\n\t\tif (!parsed.length) {\r\n\t\t\tcheckMissing();\r\n\t\t\treturn;\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t}\r\n\tcheckMissing();\r\n\tloadedNewIcons(storage);\r\n}\r\n/**\r\n* Handle response that can be async\r\n*/\r\nfunction parsePossiblyAsyncResponse(response, callback) {\r\n\tif (response instanceof Promise) response.then((data) => {\r\n\t\tcallback(data);\r\n\t}).catch(() => {\r\n\t\tcallback(null);\r\n\t});\r\n\telse callback(response);\r\n}\r\n/**\r\n* Load icons\r\n*/\r\nfunction loadNewIcons(storage, icons) {\r\n\tif (!storage.iconsToLoad) storage.iconsToLoad = icons;\r\n\telse storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\r\n\tif (!storage.iconsQueueFlag) {\r\n\t\tstorage.iconsQueueFlag = true;\r\n\t\tsetTimeout(() => {\r\n\t\t\tstorage.iconsQueueFlag = false;\r\n\t\t\tconst { provider, prefix } = storage;\r\n\t\t\tconst icons$1 = storage.iconsToLoad;\r\n\t\t\tdelete storage.iconsToLoad;\r\n\t\t\tif (!icons$1 || !icons$1.length) return;\r\n\t\t\tconst customIconLoader = storage.loadIcon;\r\n\t\t\tif (storage.loadIcons && (icons$1.length > 1 || !customIconLoader)) {\r\n\t\t\t\tparsePossiblyAsyncResponse(storage.loadIcons(icons$1, prefix, provider), (data) => {\r\n\t\t\t\t\tparseLoaderResponse(storage, icons$1, data);\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (customIconLoader) {\r\n\t\t\t\ticons$1.forEach((name) => {\r\n\t\t\t\t\tconst response = customIconLoader(name, prefix, provider);\r\n\t\t\t\t\tparsePossiblyAsyncResponse(response, (data) => {\r\n\t\t\t\t\t\tconst iconSet = data ? {\r\n\t\t\t\t\t\t\tprefix,\r\n\t\t\t\t\t\t\ticons: { [name]: data }\r\n\t\t\t\t\t\t} : null;\r\n\t\t\t\t\t\tparseLoaderResponse(storage, [name], iconSet);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst { valid, invalid } = checkIconNamesForAPI(icons$1);\r\n\t\t\tif (invalid.length) parseLoaderResponse(storage, invalid, null);\r\n\t\t\tif (!valid.length) return;\r\n\t\t\tconst api = prefix.match(matchIconName) ? getAPIModule(provider) : null;\r\n\t\t\tif (!api) {\r\n\t\t\t\tparseLoaderResponse(storage, valid, null);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst params = api.prepare(provider, prefix, valid);\r\n\t\t\tparams.forEach((item) => {\r\n\t\t\t\tsendAPIQuery(provider, item, (data) => {\r\n\t\t\t\t\tparseLoaderResponse(storage, item.icons, data);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n/**\r\n* Load icons\r\n*/\r\nconst loadIcons = (icons, callback) => {\r\n\tconst cleanedIcons = listToIcons(icons, true, allowSimpleNames());\r\n\tconst sortedIcons = sortIcons(cleanedIcons);\r\n\tif (!sortedIcons.pending.length) {\r\n\t\tlet callCallback = true;\r\n\t\tif (callback) setTimeout(() => {\r\n\t\t\tif (callCallback) callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tcallCallback = false;\r\n\t\t};\r\n\t}\r\n\tconst newIcons = Object.create(null);\r\n\tconst sources = [];\r\n\tlet lastProvider, lastPrefix;\r\n\tsortedIcons.pending.forEach((icon) => {\r\n\t\tconst { provider, prefix } = icon;\r\n\t\tif (prefix === lastPrefix && provider === lastProvider) return;\r\n\t\tlastProvider = provider;\r\n\t\tlastPrefix = prefix;\r\n\t\tsources.push(getStorage(provider, prefix));\r\n\t\tconst providerNewIcons = newIcons[provider] || (newIcons[provider] = Object.create(null));\r\n\t\tif (!providerNewIcons[prefix]) providerNewIcons[prefix] = [];\r\n\t});\r\n\tsortedIcons.pending.forEach((icon) => {\r\n\t\tconst { provider, prefix, name } = icon;\r\n\t\tconst storage = getStorage(provider, prefix);\r\n\t\tconst pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\r\n\t\tif (!pendingQueue.has(name)) {\r\n\t\t\tpendingQueue.add(name);\r\n\t\t\tnewIcons[provider][prefix].push(name);\r\n\t\t}\r\n\t});\r\n\tsources.forEach((storage) => {\r\n\t\tconst list = newIcons[storage.provider][storage.prefix];\r\n\t\tif (list.length) loadNewIcons(storage, list);\r\n\t});\r\n\treturn callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\r\n};\r\n/**\r\n* Load one icon using Promise\r\n*/\r\nconst loadIcon = (icon) => {\r\n\treturn new Promise((fulfill, reject) => {\r\n\t\tconst iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\r\n\t\tif (!iconObj) {\r\n\t\t\treject(icon);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tloadIcons([iconObj || icon], (loaded) => {\r\n\t\t\tif (loaded.length && iconObj) {\r\n\t\t\t\tconst data = getIconData(iconObj);\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tfulfill({\r\n\t\t\t\t\t\t...defaultIconProps,\r\n\t\t\t\t\t\t...data\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treject(icon);\r\n\t\t});\r\n\t});\r\n};\r\n\r\n/**\r\n* Set custom loader for multiple icons\r\n*/\r\nfunction setCustomIconsLoader(loader, prefix, provider) {\r\n\tgetStorage(provider || \"\", prefix).loadIcons = loader;\r\n}\r\n/**\r\n* Set custom loader for one icon\r\n*/\r\nfunction setCustomIconLoader(loader, prefix, provider) {\r\n\tgetStorage(provider || \"\", prefix).loadIcon = loader;\r\n}\r\n\r\n/**\r\n* Convert IconifyIconCustomisations to FullIconCustomisations, checking value types\r\n*/\r\nfunction mergeCustomisations(defaults, item) {\r\n\tconst result = { ...defaults };\r\n\tfor (const key in item) {\r\n\t\tconst value = item[key];\r\n\t\tconst valueType = typeof value;\r\n\t\tif (key in defaultIconSizeCustomisations) {\r\n\t\t\tif (value === null || value && (valueType === \"string\" || valueType === \"number\")) result[key] = value;\r\n\t\t} else if (valueType === typeof result[key]) result[key] = key === \"rotate\" ? value % 4 : value;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nconst separator = /[\\s,]+/;\r\n/**\r\n* Apply \"flip\" string to icon customisations\r\n*/\r\nfunction flipFromString(custom, flip) {\r\n\tflip.split(separator).forEach((str) => {\r\n\t\tconst value = str.trim();\r\n\t\tswitch (value) {\r\n\t\t\tcase \"horizontal\":\r\n\t\t\t\tcustom.hFlip = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vertical\":\r\n\t\t\t\tcustom.vFlip = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n* Get rotation value\r\n*/\r\nfunction rotateFromString(value, defaultValue = 0) {\r\n\tconst units = value.replace(/^-?[0-9.]*/, \"\");\r\n\tfunction cleanup(value$1) {\r\n\t\twhile (value$1 < 0) value$1 += 4;\r\n\t\treturn value$1 % 4;\r\n\t}\r\n\tif (units === \"\") {\r\n\t\tconst num = parseInt(value);\r\n\t\treturn isNaN(num) ? 0 : cleanup(num);\r\n\t} else if (units !== value) {\r\n\t\tlet split = 0;\r\n\t\tswitch (units) {\r\n\t\t\tcase \"%\":\r\n\t\t\t\tsplit = 25;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"deg\": split = 90;\r\n\t\t}\r\n\t\tif (split) {\r\n\t\t\tlet num = parseFloat(value.slice(0, value.length - units.length));\r\n\t\t\tif (isNaN(num)) return 0;\r\n\t\t\tnum = num / split;\r\n\t\t\treturn num % 1 === 0 ? cleanup(num) : 0;\r\n\t\t}\r\n\t}\r\n\treturn defaultValue;\r\n}\r\n\r\n/**\r\n* Generate <svg>\r\n*/\r\nfunction iconToHTML(body, attributes) {\r\n\tlet renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : \" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\";\r\n\tfor (const attr in attributes) renderAttribsHTML += \" \" + attr + \"=\\\"\" + attributes[attr] + \"\\\"\";\r\n\treturn \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + renderAttribsHTML + \">\" + body + \"</svg>\";\r\n}\r\n\r\n/**\r\n* Encode SVG for use in url()\r\n*\r\n* Short alternative to encodeURIComponent() that encodes only stuff used in SVG, generating\r\n* smaller code.\r\n*/\r\nfunction encodeSVGforURL(svg) {\r\n\treturn svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\r\n}\r\n/**\r\n* Generate data: URL from SVG\r\n*/\r\nfunction svgToData(svg) {\r\n\treturn \"data:image/svg+xml,\" + encodeSVGforURL(svg);\r\n}\r\n/**\r\n* Generate url() from SVG\r\n*/\r\nfunction svgToURL(svg) {\r\n\treturn \"url(\\\"\" + svgToData(svg) + \"\\\")\";\r\n}\r\n\r\nlet policy;\r\n/**\r\n* Attempt to create policy\r\n*/\r\nfunction createPolicy() {\r\n\ttry {\r\n\t\tpolicy = window.trustedTypes.createPolicy(\"iconify\", { createHTML: (s) => s });\r\n\t} catch (err) {\r\n\t\tpolicy = null;\r\n\t}\r\n}\r\n/**\r\n* Clean up value for innerHTML assignment\r\n*\r\n* This code doesn't actually clean up anything.\r\n* It is intended be used with Iconify icon data, which has already been validated\r\n*/\r\nfunction cleanUpInnerHTML(html) {\r\n\tif (policy === void 0) createPolicy();\r\n\treturn policy ? policy.createHTML(html) : html;\r\n}\r\n\r\nconst defaultExtendedIconCustomisations = {\r\n    ...defaultIconCustomisations,\r\n    inline: false,\r\n};\r\n\r\n/**\r\n * Default SVG attributes\r\n */\r\nconst svgDefaults = {\r\n    'xmlns': 'http://www.w3.org/2000/svg',\r\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\r\n    'aria-hidden': true,\r\n    'role': 'img',\r\n};\r\n/**\r\n * Style modes\r\n */\r\nconst commonProps = {\r\n    display: 'inline-block',\r\n};\r\nconst monotoneProps = {\r\n    backgroundColor: 'currentColor',\r\n};\r\nconst coloredProps = {\r\n    backgroundColor: 'transparent',\r\n};\r\n// Dynamically add common props to variables above\r\nconst propsToAdd = {\r\n    Image: 'var(--svg)',\r\n    Repeat: 'no-repeat',\r\n    Size: '100% 100%',\r\n};\r\nconst propsToAddTo = {\r\n    WebkitMask: monotoneProps,\r\n    mask: monotoneProps,\r\n    background: coloredProps,\r\n};\r\nfor (const prefix in propsToAddTo) {\r\n    const list = propsToAddTo[prefix];\r\n    for (const prop in propsToAdd) {\r\n        list[prefix + prop] = propsToAdd[prop];\r\n    }\r\n}\r\n/**\r\n * Default values for customisations for inline icon\r\n */\r\nconst inlineDefaults = {\r\n    ...defaultExtendedIconCustomisations,\r\n    inline: true,\r\n};\r\n/**\r\n * Fix size: add 'px' to numbers\r\n */\r\nfunction fixSize(value) {\r\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\r\n}\r\n/**\r\n * Render icon\r\n */\r\nconst render = (\r\n// Icon must be validated before calling this function\r\nicon, \r\n// Partial properties\r\nprops, \r\n// Icon name\r\nname) => {\r\n    // Get default properties\r\n    const defaultProps = props.inline\r\n        ? inlineDefaults\r\n        : defaultExtendedIconCustomisations;\r\n    // Get all customisations\r\n    const customisations = mergeCustomisations(defaultProps, props);\r\n    // Check mode\r\n    const mode = props.mode || 'svg';\r\n    // Create style\r\n    const style = {};\r\n    const customStyle = props.style || {};\r\n    // Create SVG component properties\r\n    const componentProps = {\r\n        ...(mode === 'svg' ? svgDefaults : {}),\r\n    };\r\n    if (name) {\r\n        const iconName = stringToIcon(name, false, true);\r\n        if (iconName) {\r\n            const classNames = ['iconify'];\r\n            const props = [\r\n                'provider',\r\n                'prefix',\r\n            ];\r\n            for (const prop of props) {\r\n                if (iconName[prop]) {\r\n                    classNames.push('iconify--' + iconName[prop]);\r\n                }\r\n            }\r\n            componentProps.className = classNames.join(' ');\r\n        }\r\n    }\r\n    // Get element properties\r\n    for (let key in props) {\r\n        const value = props[key];\r\n        if (value === void 0) {\r\n            continue;\r\n        }\r\n        switch (key) {\r\n            // Properties to ignore\r\n            case 'icon':\r\n            case 'style':\r\n            case 'children':\r\n            case 'onLoad':\r\n            case 'mode':\r\n            case 'ssr':\r\n            case 'fallback':\r\n                break;\r\n            // Forward ref\r\n            case '_ref':\r\n                componentProps.ref = value;\r\n                break;\r\n            // Merge class names\r\n            case 'className':\r\n                componentProps[key] =\r\n                    (componentProps[key] ? componentProps[key] + ' ' : '') +\r\n                        value;\r\n                break;\r\n            // Boolean attributes\r\n            case 'inline':\r\n            case 'hFlip':\r\n            case 'vFlip':\r\n                customisations[key] =\r\n                    value === true || value === 'true' || value === 1;\r\n                break;\r\n            // Flip as string: 'horizontal,vertical'\r\n            case 'flip':\r\n                if (typeof value === 'string') {\r\n                    flipFromString(customisations, value);\r\n                }\r\n                break;\r\n            // Color: copy to style\r\n            case 'color':\r\n                style.color = value;\r\n                break;\r\n            // Rotation as string\r\n            case 'rotate':\r\n                if (typeof value === 'string') {\r\n                    customisations[key] = rotateFromString(value);\r\n                }\r\n                else if (typeof value === 'number') {\r\n                    customisations[key] = value;\r\n                }\r\n                break;\r\n            // Remove aria-hidden\r\n            case 'ariaHidden':\r\n            case 'aria-hidden':\r\n                if (value !== true && value !== 'true') {\r\n                    delete componentProps['aria-hidden'];\r\n                }\r\n                break;\r\n            // Copy missing property if it does not exist in customisations\r\n            default:\r\n                if (defaultProps[key] === void 0) {\r\n                    componentProps[key] = value;\r\n                }\r\n        }\r\n    }\r\n    // Generate icon\r\n    const item = iconToSVG(icon, customisations);\r\n    const renderAttribs = item.attributes;\r\n    // Inline display\r\n    if (customisations.inline) {\r\n        style.verticalAlign = '-0.125em';\r\n    }\r\n    if (mode === 'svg') {\r\n        // Add style\r\n        componentProps.style = {\r\n            ...style,\r\n            ...customStyle,\r\n        };\r\n        // Add icon stuff\r\n        Object.assign(componentProps, renderAttribs);\r\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\r\n        let localCounter = 0;\r\n        let id = props.id;\r\n        if (typeof id === 'string') {\r\n            // Convert '-' to '_' to avoid errors in animations\r\n            id = id.replace(/-/g, '_');\r\n        }\r\n        // Add icon stuff\r\n        componentProps.dangerouslySetInnerHTML = {\r\n            __html: cleanUpInnerHTML(replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact')),\r\n        };\r\n        return createElement('svg', componentProps);\r\n    }\r\n    // Render <span> with style\r\n    const { body, width, height } = icon;\r\n    const useMask = mode === 'mask' ||\r\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\r\n    // Generate SVG\r\n    const html = iconToHTML(body, {\r\n        ...renderAttribs,\r\n        width: width + '',\r\n        height: height + '',\r\n    });\r\n    // Generate style\r\n    componentProps.style = {\r\n        ...style,\r\n        '--svg': svgToURL(html),\r\n        'width': fixSize(renderAttribs.width),\r\n        'height': fixSize(renderAttribs.height),\r\n        ...commonProps,\r\n        ...(useMask ? monotoneProps : coloredProps),\r\n        ...customStyle,\r\n    };\r\n    return createElement('span', componentProps);\r\n};\r\n\r\n/**\r\n * Initialise stuff\r\n */\r\n// Enable short names\r\nallowSimpleNames(true);\r\n// Set API module\r\nsetAPIModule('', fetchAPIModule);\r\n/**\r\n * Browser stuff\r\n */\r\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\r\n    const _window = window;\r\n    // Load icons from global \"IconifyPreload\"\r\n    if (_window.IconifyPreload !== void 0) {\r\n        const preload = _window.IconifyPreload;\r\n        const err = 'Invalid IconifyPreload syntax.';\r\n        if (typeof preload === 'object' && preload !== null) {\r\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\r\n                try {\r\n                    if (\r\n                    // Check if item is an object and not null/array\r\n                    typeof item !== 'object' ||\r\n                        item === null ||\r\n                        item instanceof Array ||\r\n                        // Check for 'icons' and 'prefix'\r\n                        typeof item.icons !== 'object' ||\r\n                        typeof item.prefix !== 'string' ||\r\n                        // Add icon set\r\n                        !addCollection(item)) {\r\n                        console.error(err);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    console.error(err);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // Set API from global \"IconifyProviders\"\r\n    if (_window.IconifyProviders !== void 0) {\r\n        const providers = _window.IconifyProviders;\r\n        if (typeof providers === 'object' && providers !== null) {\r\n            for (let key in providers) {\r\n                const err = 'IconifyProviders[' + key + '] is invalid.';\r\n                try {\r\n                    const value = providers[key];\r\n                    if (typeof value !== 'object' ||\r\n                        !value ||\r\n                        value.resources === void 0) {\r\n                        continue;\r\n                    }\r\n                    if (!addAPIProvider(key, value)) {\r\n                        console.error(err);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction IconComponent(props) {\r\n    const [mounted, setMounted] = useState(!!props.ssr);\r\n    const [abort, setAbort] = useState({});\r\n    // Get initial state\r\n    function getInitialState(mounted) {\r\n        if (mounted) {\r\n            const name = props.icon;\r\n            if (typeof name === 'object') {\r\n                // Icon as object\r\n                return {\r\n                    name: '',\r\n                    data: name,\r\n                };\r\n            }\r\n            const data = getIconData(name);\r\n            if (data) {\r\n                return {\r\n                    name,\r\n                    data,\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            name: '',\r\n        };\r\n    }\r\n    const [state, setState] = useState(getInitialState(!!props.ssr));\r\n    // Cancel loading\r\n    function cleanup() {\r\n        const callback = abort.callback;\r\n        if (callback) {\r\n            callback();\r\n            setAbort({});\r\n        }\r\n    }\r\n    // Change state if it is different\r\n    function changeState(newState) {\r\n        if (JSON.stringify(state) !== JSON.stringify(newState)) {\r\n            cleanup();\r\n            setState(newState);\r\n            return true;\r\n        }\r\n    }\r\n    // Update state\r\n    function updateState() {\r\n        var _a;\r\n        const name = props.icon;\r\n        if (typeof name === 'object') {\r\n            // Icon as object\r\n            changeState({\r\n                name: '',\r\n                data: name,\r\n            });\r\n            return;\r\n        }\r\n        // New icon or got icon data\r\n        const data = getIconData(name);\r\n        if (changeState({\r\n            name,\r\n            data,\r\n        })) {\r\n            if (data === undefined) {\r\n                // Load icon, update state when done\r\n                const callback = loadIcons([name], updateState);\r\n                setAbort({\r\n                    callback,\r\n                });\r\n            }\r\n            else if (data) {\r\n                // Icon data is available: trigger onLoad callback if present\r\n                (_a = props.onLoad) === null || _a === void 0 ? void 0 : _a.call(props, name);\r\n            }\r\n        }\r\n    }\r\n    // Mounted state, cleanup for loader\r\n    useEffect(() => {\r\n        setMounted(true);\r\n        return cleanup;\r\n    }, []);\r\n    // Icon changed or component mounted\r\n    useEffect(() => {\r\n        if (mounted) {\r\n            updateState();\r\n        }\r\n    }, [props.icon, mounted]);\r\n    // Render icon\r\n    const { name, data } = state;\r\n    if (!data) {\r\n        return props.children\r\n            ? props.children\r\n            : props.fallback\r\n                ? props.fallback\r\n                : createElement('span', {});\r\n    }\r\n    return render({\r\n        ...defaultIconProps,\r\n        ...data,\r\n    }, props, name);\r\n}\r\n/**\r\n * Block icon\r\n *\r\n * @param props - Component properties\r\n */\r\nconst Icon = forwardRef((props, ref) => IconComponent({\r\n    ...props,\r\n    _ref: ref,\r\n}));\r\n/**\r\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\r\n *\r\n * @param props - Component properties\r\n */\r\nconst InlineIcon = forwardRef((props, ref) => IconComponent({\r\n    inline: true,\r\n    ...props,\r\n    _ref: ref,\r\n}));\r\n/**\r\n * Internal API\r\n */\r\nconst _api = {\r\n    getAPIConfig,\r\n    setAPIModule,\r\n    sendAPIQuery,\r\n    setFetch,\r\n    getFetch,\r\n    listAPIProviders,\r\n};\r\n\r\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, getIcon, iconLoaded, listIcons, loadIcon, loadIcons, replaceIDs, setCustomIconLoader, setCustomIconsLoader };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}