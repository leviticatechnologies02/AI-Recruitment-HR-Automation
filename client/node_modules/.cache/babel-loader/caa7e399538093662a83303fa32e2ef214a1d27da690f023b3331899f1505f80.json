{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vara prasad\\\\OneDrive\\\\Documents\\\\GitHub\\\\AI-Recruitment-HR-Automation\\\\client\\\\src\\\\components\\\\auth\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserRole } from '../../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole = null,\n  superAdminOnly = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userRole = getUserRole();\n\n    // Check if user is authenticated\n    if (!userRole) {\n      alert('Access denied. Please login.');\n      navigate('/login');\n      return;\n    }\n\n    // Check for Super Admin only routes\n    if (superAdminOnly && userRole !== 'superadmin') {\n      alert('Access denied. Super Admin only.');\n      navigate('/login');\n      return;\n    }\n\n    // Check for specific role requirements\n    if (requiredRole && userRole !== requiredRole && userRole !== 'superadmin') {\n      alert(`Access denied. ${requiredRole} role required.`);\n      navigate('/login');\n      return;\n    }\n  }, [navigate, requiredRole, superAdminOnly]);\n  const userRole = getUserRole();\n\n  // Show loading while checking authentication\n  if (!userRole) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Check authorization again before rendering\n  if (superAdminOnly && userRole !== 'superadmin') {\n    return null;\n  }\n  if (requiredRole && userRole !== requiredRole && userRole !== 'superadmin') {\n    return null;\n  }\n  return children;\n};\n_s(ProtectedRoute, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useNavigate","getUserRole","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","superAdminOnly","_s","navigate","userRole","alert","className","role","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vara prasad/OneDrive/Documents/GitHub/AI-Recruitment-HR-Automation/client/src/components/auth/ProtectedRoute.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getUserRole } from '../../utils/auth';\r\n\r\nconst ProtectedRoute = ({ children, requiredRole = null, superAdminOnly = false }) => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const userRole = getUserRole();\r\n\r\n    // Check if user is authenticated\r\n    if (!userRole) {\r\n      alert('Access denied. Please login.');\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    // Check for Super Admin only routes\r\n    if (superAdminOnly && userRole !== 'superadmin') {\r\n      alert('Access denied. Super Admin only.');\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    // Check for specific role requirements\r\n    if (requiredRole && userRole !== requiredRole && userRole !== 'superadmin') {\r\n      alert(`Access denied. ${requiredRole} role required.`);\r\n      navigate('/login');\r\n      return;\r\n    }\r\n  }, [navigate, requiredRole, superAdminOnly]);\r\n\r\n  const userRole = getUserRole();\r\n\r\n  // Show loading while checking authentication\r\n  if (!userRole) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center vh-100\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Check authorization again before rendering\r\n  if (superAdminOnly && userRole !== 'superadmin') {\r\n    return null;\r\n  }\r\n\r\n  if (requiredRole && userRole !== requiredRole && userRole !== 'superadmin') {\r\n    return null;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG,IAAI;EAAEC,cAAc,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;;IAE9B;IACA,IAAI,CAACS,QAAQ,EAAE;MACbC,KAAK,CAAC,8BAA8B,CAAC;MACrCF,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;;IAEA;IACA,IAAIF,cAAc,IAAIG,QAAQ,KAAK,YAAY,EAAE;MAC/CC,KAAK,CAAC,kCAAkC,CAAC;MACzCF,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;;IAEA;IACA,IAAIH,YAAY,IAAII,QAAQ,KAAKJ,YAAY,IAAII,QAAQ,KAAK,YAAY,EAAE;MAC1EC,KAAK,CAAC,kBAAkBL,YAAY,iBAAiB,CAAC;MACtDG,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;EACF,CAAC,EAAE,CAACA,QAAQ,EAAEH,YAAY,EAAEC,cAAc,CAAC,CAAC;EAE5C,MAAMG,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAI,CAACS,QAAQ,EAAE;IACb,oBACEP,OAAA;MAAKS,SAAS,EAAC,yDAAyD;MAAAP,QAAA,eACtEF,OAAA;QAAKS,SAAS,EAAC,6BAA6B;QAACC,IAAI,EAAC,QAAQ;QAAAR,QAAA,eACxDF,OAAA;UAAMS,SAAS,EAAC,iBAAiB;UAAAP,QAAA,EAAC;QAAU;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,IAAIV,cAAc,IAAIG,QAAQ,KAAK,YAAY,EAAE;IAC/C,OAAO,IAAI;EACb;EAEA,IAAIJ,YAAY,IAAII,QAAQ,KAAKJ,YAAY,IAAII,QAAQ,KAAK,YAAY,EAAE;IAC1E,OAAO,IAAI;EACb;EAEA,OAAOL,QAAQ;AACjB,CAAC;AAACG,EAAA,CAnDIJ,cAAc;EAAA,QACDJ,WAAW;AAAA;AAAAkB,EAAA,GADxBd,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}